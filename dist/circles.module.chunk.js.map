{"version":3,"sources":["./src/app/pages/circles/businesssetting/businesssetting.component.html","./src/app/pages/circles/businesssetting/businesssetting.component.scss","./src/app/pages/circles/businesssetting/businesssetting.component.ts","./src/app/pages/circles/circlerequests/circlerequests.component.html","./src/app/pages/circles/circlerequests/circlerequests.component.scss","./src/app/pages/circles/circlerequests/circlerequests.component.ts","./src/app/pages/circles/circles-routing.module.ts","./src/app/pages/circles/circles.component.ts","./src/app/pages/circles/circles.module.ts","./src/app/pages/circles/circlesdisplay/circlesdisplay.component.html","./src/app/pages/circles/circlesdisplay/circlesdisplay.component.scss","./src/app/pages/circles/circlesdisplay/circlesdisplay.component.ts","./src/app/pages/circles/companyprofile/companyprofile.component.html","./src/app/pages/circles/companyprofile/companyprofile.component.scss","./src/app/pages/circles/companyprofile/companyprofile.component.ts","./src/app/pages/circles/confirmrequests/confirmrequests.component.html","./src/app/pages/circles/confirmrequests/confirmrequests.component.scss","./src/app/pages/circles/confirmrequests/confirmrequests.component.ts","./src/app/pages/circles/connectpeople/connectpeople.component.html","./src/app/pages/circles/connectpeople/connectpeople.component.scss","./src/app/pages/circles/connectpeople/connectpeople.component.ts","./src/app/pages/circles/dutychanges/dutychanges.component.html","./src/app/pages/circles/dutychanges/dutychanges.component.scss","./src/app/pages/circles/dutychanges/dutychanges.component.ts","./src/app/pages/circles/editrequest/editrequest.component.html","./src/app/pages/circles/editrequest/editrequest.component.scss","./src/app/pages/circles/editrequest/editrequest.component.ts","./src/app/pages/circles/mapping/mapping.component.html","./src/app/pages/circles/mapping/mapping.component.scss","./src/app/pages/circles/mapping/mapping.component.ts","./src/app/pages/circles/myrequests/myrequests.component.html","./src/app/pages/circles/myrequests/myrequests.component.scss","./src/app/pages/circles/myrequests/myrequests.component.ts"],"names":[],"mappings":"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","file":"circles.module.chunk.js","sourcesContent":["module.exports = \"\\n  <div col=\\\"col-lg-12\\\">\\n    <nb-card>\\n      <nb-card-header>\\n        Portal Setting\\n      </nb-card-header>\\n      <nb-card-body>\\n        <mat-tab-group>\\n          <mat-tab label=\\\"Duties/Bookings\\\">\\n            <div class=\\\"container\\\">\\n              <nb-card>\\n                <nb-card-body>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.AllowBookingsToBeAddedWithoutAnyPricing\\\">\\n                    Allow Bookings to be added without any pricing\\n                  </mat-checkbox>\\n                  <br>\\n                  <!-- <mat-checkbox [(ngModel)]=\\\"businessSettings.AutoSendAllotmentNotificationToDriverApp\\\">\\n                    Auto send allotment notification to driver app\\n                  </mat-checkbox>\\n                  <br>-->\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.UseBookingsIDInSMS\\\">\\n                    Use Bookings Id in SMS\\n                  </mat-checkbox>                  \\n                  <br>\\n                  <mat-form-field style=\\\"width: 200px;\\\">\\n                    Default Start from Garage\\n                    <input matInput [(ngModel)]=\\\"businessSettings.DefaultStartFromGarage\\\">\\n                  </mat-form-field>\\n                  <br>\\n                  <!-- <mat-form-field>\\n                    Printed duty slip's info section font size in px (min: 10, max: 20)\\n                    <input type=\\\"number\\\" matInput>\\n                  </mat-form-field> -->\\n                </nb-card-body>\\n              </nb-card>\\n              <nb-card>\\n                <nb-card-header>\\n                  Duties Listing - Columns to be displayed\\n                </nb-card-header>\\n                <nb-card-body>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowGarageStartTimeInsteadOfReportingTime\\\">\\n                    Show garage start time instead of reporting time\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowFromCity\\\">\\n                    Show from city\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowDropAddress\\\">\\n                    Show drop address\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowRemarks\\\">\\n                    Show remarks\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowVehicleGroup\\\">\\n                    Show vehicle group\\n                  </mat-checkbox>\\n                  <br>\\n                  <!-- <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowLabels\\\">\\n                    Show labels\\n                  </mat-checkbox>\\n                  <br> -->\\n                </nb-card-body>\\n              </nb-card>\\n              <br>\\n              <nb-card>\\n                <nb-card-header>\\n                  Default options for duty slip printing\\n                </nb-card-header>\\n                <nb-card-body>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.AddCustomerName\\\">\\n                    Add customer name\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.AddBookedByName\\\">\\n                    Add booked by name\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.AddAllPassengerNamesAndNumbers\\\">\\n                    Add all passenger names and numbers\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.HideVehicleName\\\">\\n                    Hide vehicle name\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.HideRemarks\\\">\\n                    Hide remarks\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.AddGarageStartTime\\\">\\n                    Add garage start time\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.AddReleasedKmTimeSection\\\">\\n                    Add released km/time section\\n                  </mat-checkbox>\\n                  <!-- <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.AddEntireBookingDateRange\\\">\\n                    Add entire booking date range\\n                  </mat-checkbox> -->\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.AddPrintedByInformationToFooter\\\">\\n                    Add printed by information to footer (with date/time)\\n                  </mat-checkbox>\\n                  <!-- <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.AlwaysUseFullPageDesign\\\">\\n                    Always use full page design\\n                  </mat-checkbox> -->\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.HideBusinessLetterHead\\\">\\n                    Hide business letter head\\n                  </mat-checkbox>\\n                  <br>\\n                </nb-card-body>\\n              </nb-card>\\n              <!-- <br> -->\\n              <!-- <nb-card> -->\\n                <!-- <nb-card-body> -->\\n                  <!-- <mat-checkbox [(ngModel)]=\\\"businessSettings.HideCustomerNameForDriverSupplierInMobileApp\\\">\\n                    Hide customer name for driver/supplier in mobile app\\n                  </mat-checkbox> -->\\n                <!-- </nb-card-body> -->\\n              <!-- </nb-card> -->\\n              <!-- <div>\\n                <button mat-raised-button (click)=\\\"saveDutiesBookings()\\\" color=\\\"primary\\\">Save</button>\\n                <button mat-raised-button color=\\\"warn\\\">Cancel</button>\\n              </div> -->\\n            </div>\\n          </mat-tab>\\n          <mat-tab label=\\\"Billing\\\">\\n            <div class=\\\"container\\\">\\n              <nb-card>\\n                <nb-card-body>\\n                  <mat-form-field>\\n                    Invoice dates & numbering\\n                    <mat-select [(ngModel)]=\\\"businessSettings.invoiceDatesAndNumbering\\\" (selectionChange)=\\\"selectInvoiceDatesAndNumbering($event.value)\\\">\\n                      <mat-option value=\\\"Automatic\\\">\\n                        Automatic\\n                      </mat-option>\\n                      <mat-option value=\\\"Manual\\\">\\n                        Manual\\n                      </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                  <!-- <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.RoundOffExtraTimeOfEveryDutyWhileDisplayingOnInvoice\\\">\\n                    Round off extra time of every duty while displaying on invoice\\n                  </mat-checkbox> -->\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPerKilometerRateOnInvoiceForDayKMDuties\\\">\\n                    Show per kilometer rate on invoice for day km duties\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.HideVehicleNumberFromInvoice\\\">\\n                    Hide Vehicle Number from Invoice\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowDutySummaryAtTheTopOfTheInvoiceAlways\\\">\\n                    Show duty summary at the top of the invoice always\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-hint>\\n                    Note: Please keep duty summary columns count to minimum, else duty summary table in print/pdf/email might break.\\n                  </mat-hint>\\n                </nb-card-body>\\n              </nb-card>          \\n              <br>\\n              <nb-card>\\n                <nb-card-header>\\n                  Invoice duty summary columns\\n                </nb-card-header>\\n                <nb-card-body>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowDutyId\\\">\\n                    Show duty id\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowDutyType\\\">\\n                    Show duty type\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowBookedByName\\\">\\n                    Show booked by name\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPassengerNames\\\">\\n                    Show passenger names\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowVehicleGroupName\\\">\\n                    Show vehicle group name\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowVehicleNumber\\\">\\n                    Show vehicle number\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowStartDate\\\">\\n                    Show start date\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowEndDate\\\">\\n                    Show end date\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowStartTime\\\">\\n                    Show start time\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowEndTime\\\">\\n                    Show end time\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowExtraHour\\\">\\n                    Show extra hour\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowTotalHour\\\">\\n                    Show total hour\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowStartKM\\\">\\n                    Show start km\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowEndKM\\\">\\n                    Show end km\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowExtraKM\\\">\\n                    Show extra km\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowTotalKM\\\">\\n                    Show total km\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowExtraHourRate\\\">\\n                    Show extra hour rate\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowExtraKMRate\\\">\\n                    Show extra km rate\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowExtraHourCost\\\">\\n                    Show extra hour cost\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowExtraKMCost\\\">\\n                    Show extra km cost\\n                  </mat-checkbox>\\n                  <br>\\n                  <!-- <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowConsolidatedBillingItems\\\">\\n                    Show consolidated billing items\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowSeparatedBillingItems\\\">\\n                    Show separated billing items\\n                  </mat-checkbox>\\n                  <br> -->\\n                  <!-- <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowAllowances\\\">\\n                    Show allowances\\n                  </mat-checkbox>\\n                  <br> -->\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPrice\\\">\\n                    Show price\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowQuantityNumberOfDays\\\">\\n                    Show quantity - Number of days\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowTotalPrice\\\">\\n                    Show total price\\n                  </mat-checkbox>\\n                  <br>\\n                  <!-- <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowCarHireCharges\\\">\\n                    Show car hire charges\\n                  </mat-checkbox>\\n                  <br> -->\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowDutySubtotal\\\">\\n                    Show duty subtotal\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowDutySubtotalIncludingAllowances\\\">\\n                    Show duty subtotal - including allowances\\n                  </mat-checkbox>\\n                  <br>\\n                </nb-card-body>\\n              </nb-card>\\n              <!-- <div>\\n                <button mat-raised-button (click)=\\\"saveBilling()\\\" color=\\\"primary\\\">Save</button>\\n                <button mat-raised-button color=\\\"warn\\\">Cancel</button>\\n              </div> -->\\n            </div>            \\n          </mat-tab>\\n          <mat-tab label=\\\"Purchase\\\">\\n            <div class=\\\"container\\\">\\n              <nb-card>\\n                <nb-card-header>\\n                  Purchase duty summary columns\\n                </nb-card-header>\\n                <nb-card-body>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseDutyID\\\">\\n                    Show duty id\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseDutyType\\\">\\n                    Show duty type\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseBookedByName\\\">\\n                    Show booked by name\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchasePassengerNames\\\">\\n                    Show passenger names\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseVehicleGroupName\\\">\\n                    Show vehicle group name\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseVehicleNumber\\\">\\n                    Show vehicle number\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseStartDate\\\">\\n                    Show start date\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseEndDate\\\">\\n                    Show end date\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseStartTime\\\">\\n                    Show start time\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseEndTime\\\">\\n                    Show end time\\n                  </mat-checkbox>\\n                  <br>\\n                  <!-- <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseExtraHour\\\">\\n                    Show extra hour\\n                  </mat-checkbox>\\n                  <br> -->\\n                  <!-- <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseTotalHours\\\">\\n                    Show total hours\\n                  </mat-checkbox>\\n                  <br> -->\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseStartKM\\\">\\n                    Show start km\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseEndKM\\\">\\n                    Show end km\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseExtraKM\\\">\\n                    Show extra km\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseTotalKm\\\">\\n                    Show total km\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseExtraHourRate\\\">\\n                    Show extra hour rate\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseExtraKMRate\\\">\\n                    Show extra km rate\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseExtraHourCost\\\">\\n                    Show extra hour cost\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseExtraKMCost\\\">\\n                    Show extra km cost\\n                  </mat-checkbox>\\n                  <br>\\n                  <!-- <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseConsolidatedBillingItems\\\">\\n                    Show consolidated billing items\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseSeparatedBillingItems\\\">\\n                    Show separated billing items\\n                  </mat-checkbox>\\n                  <br> -->\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseAllowances\\\">\\n                    Show allowances\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchasePrice\\\">\\n                    Show price\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowPurchaseDutySubtotal\\\">\\n                    Show duty subtotal\\n                  </mat-checkbox>\\n                  <br>\\n                  <!-- <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowCustomerCarHireCharges\\\">\\n                    Show customer car hire charges\\n                  </mat-checkbox>\\n                  <br> -->\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowCustomerCarHireChargesIncludingAllowances\\\">\\n                    Show customer car hire charges - including allowances\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowCustomerDutySubtotal\\\">\\n                    Show customer duty subtotal\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.ShowCustomerDutySubtotalIncludingAllowances\\\">\\n                    Show customer duty subtotal - including allowances\\n                  </mat-checkbox>\\n                  <br>\\n                </nb-card-body>\\n              </nb-card>\\n              <!-- <div>\\n                <button mat-raised-button (click)=\\\"savePurchase()\\\" color=\\\"primary\\\">Save</button>\\n                <button mat-raised-button color=\\\"warn\\\">Cancel</button>\\n              </div> -->\\n            </div>\\n          </mat-tab>\\n          <mat-tab label=\\\"Driver Allowance\\\">\\n            <div class=\\\"container\\\">\\n              <div class=\\\"row\\\" style=\\\"padding:15px\\\">\\n                <form [formGroup]=\\\"driverAllowanceForm\\\" class=\\\"w-100\\\">\\n                  <div formArrayName=\\\"rows\\\">\\n                    <div class=\\\"row ptb-10\\\" *ngFor=\\\"let aRow of driverAllowancesForms.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\n                      <div class=\\\"col-lg-11 col-11\\\">\\n                        <nb-card>\\n                          <nb-card-header>\\n                            Driver Allowance\\n                          </nb-card-header>\\n                          <nb-card-body>\\n                            <mat-form-field>\\n                              Select Allowance Type\\n                              <mat-select formControlName=\\\"allowanceType\\\">\\n                                <mat-option value=\\\"Over time per hour\\\">\\n                                  Over time per hour\\n                                </mat-option>\\n                                <mat-option value=\\\"Outstation Allowance\\\">\\n                                  Outstation Allowance\\n                                </mat-option>\\n                                <mat-option value=\\\"Outstation Overnight Allowance\\\">\\n                                  Outstation Overnight Allowance\\n                                </mat-option>\\n                                <mat-option value=\\\"Sunday Allowance\\\">\\n                                  Sunday Allowance\\n                                </mat-option>\\n                                <mat-option value=\\\"Early Start Allowance\\\">\\n                                  Early Start Allowance\\n                                </mat-option>\\n                                <mat-option value=\\\"Night Allowance\\\">\\n                                  Night Allowance\\n                                </mat-option>\\n                                <mat-option value=\\\"Extra Duty Allowance\\\">\\n                                  Extra Duty Allowance\\n                                </mat-option>\\n                                <mat-option value=\\\"Driver Daily Allowance\\\">\\n                                  Driver Daily Allowance\\n                                </mat-option>\\n                              </mat-select>\\n                            </mat-form-field>\\n                            <br>\\n                            <mat-checkbox formControlName=\\\"chargedToCustomer\\\">\\n                              Charged to Customer\\n                            </mat-checkbox>\\n                            <br>\\n                            <mat-form-field>\\n                              Amount\\n                              <input type=\\\"number\\\" matInput formControlName=\\\"amount\\\">\\n                            </mat-form-field>\\n                            <!-- <mat-form-field>\\n                              Night Allowance Start Time\\n                              <input type=\\\"time\\\" matInput formControlName=\\\"nightAllowanceStartTime\\\">\\n                            </mat-form-field> -->\\n                          </nb-card-body>\\n                        </nb-card>\\n                      </div>\\n                      <div class=\\\"col-lg-1 col-1\\\">\\n                        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"deleteDriverAllowance(i, aRow)\\\"> <mat-icon>clear</mat-icon></button>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </form>\\n                <div class=\\\"row pb-10\\\">\\n                  <div class=\\\"col-lg-12 col-12\\\">\\n                    <button mat-fab color=\\\"primary\\\" (click)=\\\"addDriverAllowance()\\\" style=\\\"float:right; margin: 5px;\\\"><mat-icon>add</mat-icon></button>\\n                  </div>                \\n                </div>\\n              </div>\\n              <!-- <div>\\n                <button mat-raised-button (click)=\\\"saveDriverAllowance()\\\" color=\\\"primary\\\">Save</button>\\n                <button mat-raised-button color=\\\"warn\\\">Cancel</button>\\n              </div> -->\\n            </div>            \\n          </mat-tab>\\n          <mat-tab label=\\\"Notification\\\">\\n            <div class=\\\"container\\\">\\n              <nb-card>\\n                <nb-card-header>\\n                  SMS\\n                </nb-card-header>\\n                <nb-card-body>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.SMSEnabled\\\">\\n                    Enabled\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-hint>\\n                    Note: SMSes received would be chargeable and would be added to your monthly invoice.\\n                  </mat-hint>\\n                  <br>\\n                  <nb-card *ngIf=\\\"businessSettings.SMSEnabled\\\">\\n                    <nb-card-header>\\n                      Phone Numbers\\n                    </nb-card-header>\\n                    <nb-card-body>\\n                      <div class=\\\"row\\\" style=\\\"padding:15px\\\">\\n                        <form [formGroup]=\\\"SMSPhoneNumbersForm\\\" class=\\\"w-100\\\">\\n                          <div formArrayName=\\\"rows\\\">\\n                            <div class=\\\"row ptb-10\\\" *ngFor=\\\"let aRow of SMSPhoneNumbersForms.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\n                              <div class=\\\"col-lg-11 col-11\\\">                              \\n                                <mat-form-field>                                    \\n                                  <input type=\\\"number\\\" matInput formControlName=\\\"phoneNumber\\\">\\n                                </mat-form-field>                              \\n                              </div>\\n                              <div class=\\\"col-lg-1 col-1\\\">\\n                                <button mat-icon-button color=\\\"primary\\\" (click)=\\\"deleteSMSPhoneNumber(i, aRow)\\\"> <mat-icon>clear</mat-icon></button>\\n                              </div>                    \\n                            </div>                    \\n                          </div>\\n                        </form>                 \\n                        <div class=\\\"row pb-10\\\">\\n                          <div class=\\\"col-lg-12 col-12\\\">\\n                            <button mat-fab color=\\\"primary\\\" (click)=\\\"addSMSPhoneNumber()\\\" style=\\\"float:right; margin: 5px;\\\"><mat-icon>add</mat-icon></button>\\n                          </div>                \\n                        </div>\\n                      </div>\\n                    </nb-card-body>\\n                  </nb-card>\\n                </nb-card-body>\\n              </nb-card>\\n              <br>\\n              <nb-card>\\n                <nb-card-header>\\n                  Email\\n                </nb-card-header>\\n                <nb-card-body>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.EmailEnabled\\\">\\n                    Enabled\\n                  </mat-checkbox>\\n                  <br>                \\n                  <nb-card *ngIf=\\\"businessSettings.EmailEnabled\\\">\\n                    <nb-card-header>\\n                      Email Address\\n                    </nb-card-header>\\n                    <nb-card-body>\\n                      <div class=\\\"row\\\" style=\\\"padding:15px\\\">\\n                        <form [formGroup]=\\\"EmailAddressForm\\\" class=\\\"w-100\\\">\\n                          <div formArrayName=\\\"rows\\\">\\n                            <div class=\\\"row ptb-10\\\" *ngFor=\\\"let aRow of EmailAddressForms.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\n                              <div class=\\\"col-lg-11 col-11\\\">                              \\n                                <mat-form-field>                                    \\n                                  <input type=\\\"email\\\" matInput formControlName=\\\"emailAddress\\\">\\n                                </mat-form-field>                              \\n                              </div>\\n                              <div class=\\\"col-lg-1 col-1\\\">\\n                                <button mat-icon-button color=\\\"primary\\\" (click)=\\\"deleteEmailAddress(i, aRow)\\\"> <mat-icon>clear</mat-icon></button>\\n                              </div>                    \\n                            </div>                    \\n                          </div>\\n                        </form>                 \\n                        <div class=\\\"row pb-10\\\">\\n                          <div class=\\\"col-lg-12 col-12\\\">\\n                            <button mat-fab color=\\\"primary\\\" (click)=\\\"addEmailAddress()\\\" style=\\\"float:right; margin: 5px;\\\"><mat-icon>add</mat-icon></button>\\n                          </div>                \\n                        </div>\\n                      </div>\\n                    </nb-card-body>\\n                  </nb-card>\\n                </nb-card-body>\\n              </nb-card>\\n              <!-- <div>\\n                <button mat-raised-button (click)=\\\"saveNotification()\\\" color=\\\"primary\\\">Save</button>\\n                <button mat-raised-button color=\\\"warn\\\">Cancel</button>\\n              </div> -->\\n            </div>            \\n          </mat-tab>\\n          <mat-tab label=\\\"Email Templates\\\">\\n            <div class=\\\"container\\\">              \\n              <nb-card>\\n                <nb-card-header>\\n                  Booking Confirmation\\n                </nb-card-header>\\n                <nb-card-body>                  \\n                  Header\\n                  <quill-editor [(ngModel)]=\\\"businessSettings.bookingConfirmationHeader\\\"></quill-editor>\\n                  <br>                  \\n                  Footer\\n                  <quill-editor [(ngModel)]=\\\"businessSettings.bookingConfirmationFooter\\\"></quill-editor>\\n                </nb-card-body>\\n              </nb-card>\\n              <br>\\n              <nb-card>\\n                <nb-card-header>\\n                  Duty Allotment - To Customer\\n                </nb-card-header>\\n                <nb-card-body>\\n                  Header\\n                  <quill-editor [(ngModel)]=\\\"businessSettings.dutyAllotmentToCustomerHeader\\\"></quill-editor>\\n                  <br>\\n                  Footer\\n                  <quill-editor [(ngModel)]=\\\"businessSettings.dutyAllotmentToCustomerFooter\\\"></quill-editor>\\n                </nb-card-body>\\n              </nb-card>\\n              <br>\\n              <nb-card>\\n                <nb-card-header>\\n                  Duty Allotment - To Supplier\\n                </nb-card-header>\\n                <nb-card-body>\\n                  Header\\n                  <quill-editor [(ngModel)]=\\\"businessSettings.dutyAllotmentToSupplierHeader\\\"></quill-editor>\\n                  <br>\\n                  Footer\\n                  <quill-editor [(ngModel)]=\\\"businessSettings.dutyAllotmentToSupplierFooter\\\"></quill-editor>\\n                </nb-card-body>\\n              </nb-card>\\n              <br>\\n              <!-- <nb-card>\\n                <nb-card-header>\\n                  Duty/Booking Cancellation\\n                </nb-card-header>\\n                <nb-card-body>\\n                  Header\\n                  <quill-editor [(ngModel)]=\\\"businessSettings.dutyBookingCancellationHeader\\\"></quill-editor>\\n                  <br>\\n                  Footer\\n                  <quill-editor [(ngModel)]=\\\"businessSettings.dutyBookingCancellationFooter\\\"></quill-editor>\\n                </nb-card-body>\\n              </nb-card>\\n              <br>\\n              <nb-card>\\n                <nb-card-header>\\n                  Invoice To Customer\\n                </nb-card-header>\\n                <nb-card-body>\\n                  Header\\n                  <quill-editor [(ngModel)]=\\\"businessSettings.invoiceToCustomerHeader\\\"></quill-editor>\\n                  <br>\\n                  Footer\\n                  <quill-editor [(ngModel)]=\\\"businessSettings.invoiceToCustomerFooter\\\"></quill-editor>\\n                </nb-card-body>\\n              </nb-card>\\n              <br>\\n              <nb-card>\\n                <nb-card-header>\\n                  Payment Request\\n                </nb-card-header>\\n                <nb-card-body>\\n                  Header\\n                  <quill-editor [(ngModel)]=\\\"businessSettings.paymentRequestHeader\\\"></quill-editor>\\n                  <br>\\n                  Footer\\n                  <quill-editor [(ngModel)]=\\\"businessSettings.paymentRequestFooter\\\"></quill-editor>\\n                </nb-card-body>\\n              </nb-card> -->\\n              <!-- <div>\\n                <button mat-raised-button (click)=\\\"saveEmailTemplates()\\\" color=\\\"primary\\\">Save</button>\\n                <button mat-raised-button color=\\\"warn\\\">Cancel</button>\\n              </div> -->\\n            </div>            \\n          </mat-tab>\\n          <mat-tab label=\\\"Hotel\\\">\\n            <div class=\\\"container\\\">\\n              <nb-card>\\n                <nb-card-body>\\n                  <mat-form-field class=\\\"w-100\\\">\\n                    Default Terms & Conditions\\n                    <textarea matInput rows=\\\"12\\\" [(ngModel)]=\\\"businessSettings.defaultTermsAndConditions\\\"></textarea>\\n                  </mat-form-field>\\n                </nb-card-body>\\n              </nb-card>\\n              </div>\\n          </mat-tab>\\n          <mat-tab label=\\\"Others\\\">\\n            <div class=\\\"container\\\">\\n              <nb-card>\\n                <nb-card-body>\\n                  <mat-form-field>\\n                    Default Customer\\n                    <input aria-placeholder=\\\"Pick one\\\"  name=\\\"cname\\\" [formControl]=\\\"customerCtrl\\\" matInput [matAutocomplete]=\\\"custauto\\\">\\n                    <mat-autocomplete #custauto=\\\"matAutocomplete\\\">\\n                      <mat-option *ngFor=\\\"let option of customer |async\\\" [value]=\\\"option.name\\\" (onSelectionChange)=\\\"setCustomer(option,$event)\\\">\\n                        {{ option.name }}\\n                      </mat-option>\\n                    </mat-autocomplete>\\n                  </mat-form-field>\\n                  <br>\\n                  <mat-form-field>\\n                    Select Dispatch Center\\n                    <mat-select [(ngModel)]=\\\"businessSettings.dispatchCenter\\\">\\n                      <mat-option *ngFor=\\\"let element of dispatchCenters\\\" [value]=\\\"element.name\\\" (onSelectionChange)=\\\"setDispatchCenter($event.value)\\\">\\n                        {{element.name}}\\n                      </mat-option>                      \\n                    </mat-select>\\n                  </mat-form-field>\\n                  <br>\\n                  <mat-form-field>\\n                    Default City\\n                    <input matInput [formControl]=\\\"cityCtrl\\\"  [matAutocomplete]=\\\"autoCity\\\">\\n                    <mat-autocomplete #autoCity=\\\"matAutocomplete\\\">\\n                      <mat-option *ngFor=\\\"let option of cities | async\\\" [value]=\\\"option\\\" (onSelectionChange)=\\\"setCity(option,$event)\\\">\\n                        {{ option }}\\n                      </mat-option>\\n                    </mat-autocomplete>\\n                  </mat-form-field>\\n                </nb-card-body>\\n              </nb-card>              \\n              <nb-card>\\n                <nb-card-header>\\n                  Auto CC emails\\n                </nb-card-header>\\n                <nb-card-body>\\n                  <mat-form-field>\\n                    Enter an email ID\\n                    <input type=\\\"email\\\" matInput [(ngModel)]=\\\"businessSettings.AutoCCEmail\\\">\\n                  </mat-form-field>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.CCAllConfirmationAndCancellationEmails\\\">\\n                    CC all confirmation & cancellation emails\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.CCAllAllotmentEmails\\\">\\n                    CC all allotment emails\\n                  </mat-checkbox>\\n                  <br>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.CCAllInvoiceEmails\\\">\\n                    CC all invoice emails\\n                  </mat-checkbox>\\n                </nb-card-body>\\n              </nb-card>\\n              <br>\\n              <nb-card>\\n                <nb-card-body>\\n                  <mat-form-field>\\n                    SMS Mask\\n                    <input type=\\\"text\\\" matInput [(ngModel)]=\\\"businessSettings.SMSMask\\\" readonly>\\n                  </mat-form-field>\\n                </nb-card-body>\\n              </nb-card>              \\n              <br>\\n              <nb-card>\\n                <nb-card-header>\\n                  Network Options\\n                </nb-card-header>\\n                <nb-card-body>\\n                  <mat-checkbox [(ngModel)]=\\\"businessSettings.AutoAcceptIncomingDutySlip\\\">\\n                    Auto accept incoming duty slip\\n                  </mat-checkbox>\\n                </nb-card-body>\\n              </nb-card>\\n              <nb-card>\\n                <nb-card-header>\\n                  Tracking\\n                </nb-card-header>\\n                <nb-card-body>\\n                  <mat-form-field>\\n                    Select Provider\\n                    <mat-select [(ngModel)]=\\\"businessSettings.trackingProvider\\\" (selectionChange)=\\\"selectProvider($event.value)\\\">\\n                      <mat-option value=\\\"Aditi Tracking\\\">\\n                        Aditi Tracking\\n                      </mat-option>                      \\n                    </mat-select>\\n                  </mat-form-field>\\n                  <br>\\n                  <mat-form-field>\\n                    Tracking Username\\n                    <input type=\\\"text\\\" matInput [(ngModel)]=\\\"businessSettings.trackingUsername\\\">\\n                  </mat-form-field>\\n                  <br>\\n                  <mat-form-field>\\n                    Tracking Password\\n                    <input type=\\\"password\\\" matInput [(ngModel)]=\\\"businessSettings.trackingPassword\\\">\\n                  </mat-form-field>\\n                </nb-card-body>\\n              </nb-card>\\n              <!-- <div>\\n                <button mat-raised-button (click)=\\\"saveOthers()\\\" color=\\\"primary\\\">Save</button>\\n                <button mat-raised-button color=\\\"warn\\\">Cancel</button>\\n              </div> -->\\n            </div>\\n          </mat-tab>\\n        </mat-tab-group>        \\n      </nb-card-body>\\n    </nb-card>    \\n  </div>\\n  <div>\\n    <button *ngIf=\\\"!editState\\\" mat-raised-button (click)=\\\"saveBusinessSettings()\\\" color=\\\"primary\\\">Save</button>\\n    <button *ngIf=\\\"editState\\\" mat-raised-button (click)=\\\"updateBusinessSettings()\\\" color=\\\"primary\\\">Save</button>\\n    <!-- <button mat-raised-button color=\\\"warn\\\">Cancel</button> -->\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/circles/businesssetting/businesssetting.component.html\n// module id = ./src/app/pages/circles/businesssetting/businesssetting.component.html\n// module chunks = circles.module","module.exports = \".mat-tab-body {\\n  z-index: -999 !important; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/circles/businesssetting/businesssetting.component.scss\n// module id = ./src/app/pages/circles/businesssetting/businesssetting.component.scss\n// module chunks = circles.module","import { Component, OnInit, HostListener } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, FormControl } from '@angular/forms';\nimport { Customer } from '../../masters/customer';\nimport { BusinesssettingService } from './businesssetting.service';\nimport { AuthService } from '../../../core/auth.service';\nimport { CustomerService } from '../../masters/customer/customer.service';\nimport { startWith, map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { NewBranchService } from '../../operations/new-branch/new-branch.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'businesssetting',\n  templateUrl: './businesssetting.component.html',\n  styleUrls: ['./businesssetting.component.scss']\n})\nexport class BusinesssettingComponent implements OnInit {\n\n  @HostListener(\"window:beforeunload\", [\"$event\"]) unloadHandler(event: Event) {\n    console.log(\"Processing beforeunload...\");\n    event.returnValue = false;\n  }\n\n  editState: Boolean = false;\n\n  driverAllowanceForm: FormGroup;\n  SMSPhoneNumbersForm: FormGroup;\n  EmailAddressForm: FormGroup;\n  textEditorForm: FormGroup;\n  dispatchCenters: any;\n\n  businessSettings: BusinessSettings = {    \n    ownerID: '',\n    AllowBookingsToBeAddedWithoutAnyPricing: false,\n    AutoSendAllotmentNotificationToDriverApp: false,\n    UseBookingsIDInSMS: false,\n    DefaultStartFromGarage: '',\n    RoundOffDutySlipTimeToNearestHour: false,\n    ShowGarageStartTimeInsteadOfReportingTime: false,\n    ShowFromCity: false,\n    ShowDropAddress: false,\n    ShowRemarks: false,\n    ShowVehicleGroup: false,\n    ShowLabels: false,\n    AddCustomerName: false,\n    AddBookedByName: false,\n    AddAllPassengerNamesAndNumbers: false,\n    HideVehicleName: false,\n    HideRemarks: false,\n    AddGarageStartTime: false,\n    AddReleasedKmTimeSection: false,\n    AddEntireBookingDateRange: false,\n    AddPrintedByInformationToFooter: false,\n    AlwaysUseFullPageDesign: false,\n    HideBusinessLetterHead: false,\n    HideCustomerNameForDriverSupplierInMobileApp: false,\n    invoiceDatesAndNumbering: 'Automatic',\n    RoundOffExtraTimeOfEveryDutyWhileDisplayingOnInvoice: false,\n    ShowPerKilometerRateOnInvoiceForDayKMDuties: false,\n    HideVehicleNumberFromInvoice: false,\n    ShowDutySummaryAtTheTopOfTheInvoiceAlways: false,\n    ShowDutyId: false,\n    ShowDutyType: false,\n    ShowBookedByName: false,\n    ShowPassengerNames: false,\n    ShowVehicleGroupName: false,\n    ShowVehicleNumber: false,\n    ShowStartDate: false,\n    ShowEndDate: false,\n    ShowStartTime: false,\n    ShowEndTime: false,\n    ShowExtraHour: false,\n    ShowTotalHour: false,\n    ShowStartKM: false,\n    ShowEndKM: false,\n    ShowExtraKM: false,\n    ShowTotalKM: false,\n    ShowExtraHourRate: false,\n    ShowExtraKMRate: false,\n    ShowExtraHourCost: false,\n    ShowExtraKMCost: false,\n    ShowConsolidatedBillingItems: false,\n    ShowSeparatedBillingItems: false,\n    ShowAllowances: false,\n    ShowPrice: false,\n    ShowQuantityNumberOfDays: false,\n    ShowTotalPrice: false,\n    ShowCarHireCharges: false,\n    ShowDutySubtotal: false,\n    ShowDutySubtotalIncludingAllowances: false,\n    ShowPurchaseDutyID: false,\n    ShowPurchaseDutyType: false,\n    ShowPurchaseBookedByName: false,\n    ShowPurchasePassengerNames: false,\n    ShowPurchaseVehicleGroupName: false,\n    ShowPurchaseVehicleNumber: false,\n    ShowPurchaseStartDate: false,\n    ShowPurchaseEndDate: false,\n    ShowPurchaseStartTime: false,\n    ShowPurchaseEndTime: false,\n    ShowPurchaseExtraHour: false,\n    ShowPurchaseTotalHours: false,\n    ShowPurchaseStartKM: false,\n    ShowPurchaseEndKM: false,\n    ShowPurchaseExtraKM: false,\n    ShowPurchaseTotalKm: false,\n    ShowPurchaseExtraHourRate: false,\n    ShowPurchaseExtraKMRate: false,\n    ShowPurchaseExtraHourCost: false,\n    ShowPurchaseExtraKMCost: false,\n    ShowPurchaseConsolidatedBillingItems: false,\n    ShowPurchaseSeparatedBillingItems: false,\n    ShowPurchaseAllowances: false,\n    ShowPurchasePrice: false,\n    ShowPurchaseDutySubtotal: false,\n    ShowCustomerCarHireCharges: false,\n    ShowCustomerCarHireChargesIncludingAllowances: false,\n    ShowCustomerDutySubtotal: false,\n    ShowCustomerDutySubtotalIncludingAllowances: false,\n    defaultCustomer: '',\n    dispatchCenter: '',\n    defaultCity: '',\n    AutoCCEmail: '',\n    CCAllConfirmationAndCancellationEmails: false,\n    CCAllAllotmentEmails: false,\n    CCAllInvoiceEmails: false,\n    SMSMask: '',\n    AutoAcceptIncomingDutySlip: false,\n    bookingConfirmationHeader: '',\n    bookingConfirmationFooter: '',\n    dutyAllotmentToCustomerHeader: '',\n    dutyAllotmentToCustomerFooter: '',\n    dutyAllotmentToSupplierHeader: '',\n    dutyAllotmentToSupplierFooter: '',\n    dutyBookingCancellationHeader: '',\n    dutyBookingCancellationFooter: '',\n    invoiceToCustomerHeader: '',\n    invoiceToCustomerFooter: '',\n    paymentRequestHeader: '',\n    paymentRequestFooter: '',\n    SMSEnabled: false,\n    EmailEnabled: false,\n    trackingProvider: '',\n    trackingUsername: '',\n    trackingPassword: '',\n    defaultTermsAndConditions: '',\n  }\n        \n  customerCtrl: FormControl = new FormControl();\n  customers: Customer[];\n  customer: any;\n  cityCtrl: FormControl = new FormControl();\n  cities: any;\n  city = [\n    '',\n    'Achalpur',\n    'Achhnera',\n    'Adalaj',\n    'Adilabad',\n    'Adityapur',\n    'Adoni',\n    'Adoor',\n    'Adra',\n    'Adyar',\n    'Afzalpur',\n    'Agartala',\n    'Agra',\n    'Ahmedabad',\n    'Ahmednagar',\n    'Aizawl',\n    'Ajmer',\n    'Akola',\n    'Akot',\n    'Alappuzha',\n    'Aligarh',\n    'Alipurduar',\n    'Alirajpur',\n    'Allahabad',\n    'Alwar',\n    'Amalapuram',\n    'Amalner',\n    'Ambejogai',\n    'Ambikapur',\n    'Amravati',\n    'Amreli',\n    'Amritsar',\n    'Amroha',\n    'Anakapalle',\n    'Anand',\n    'Anantapur',\n    'Anantnag',\n    'Anjangaon',\n    'Anjar',\n    'Ankleshwar',\n    'Arakkonam',\n    'Arambagh',\n    'Araria',\n    'Arrah',\n    'Arsikere',\n    'Aruppukkottai',\n    'Arvi',\n    'Arwal',\n    'Asansol',\n    'Asarganj',\n    'Ashok Nagar',\n    'Athni',\n    'Attingal',\n    'Aurangabad',\n    'Aurangabad',\n    'Azamgarh',\n    'Bagaha',\n    'Bageshwar',\n    'Bahadurgarh',\n    'Baharampur',\n    'Bahraich',\n    'Balaghat',\n    'Balangir',\n    'Baleshwar Town',\n    'Ballari',\n    'Balurghat',\n    'Bankura',\n    'Bapatla',\n    'Baramula',\n    'Barbil',\n    'Bargarh',\n    'Barh',\n    'Baripada Town',\n    'Barmer',\n    'Barnala',\n    'Barpeta',\n    'Batala',\n    'Bathinda',\n    'Begusarai',\n    'Belagavi',\n    'Bellampalle',\n    'Belonia',\n    'Bengaluru',\n    'Bettiah',\n    'BhabUrban',\n    'Bhadrachalam',\n    'Bhadrak',\n    'Bhagalpur',\n    'Bhainsa',\n    'Bharatpur',\n    'Bharuch',\n    'Bhatapara',\n    'Bhavnagar',\n    'Bhawanipatna',\n    'Bheemunipatnam',\n    'Bhilai Nagar',\n    'Bhilwara',\n    'Bhimavaram',\n    'Bhiwandi',\n    'Bhiwani',\n    'Bhongir',\n    'Bhopal',\n    'Bhubaneswar',\n    'Bhuj',\n    'Bikaner',\n    'Bilaspur',\n    'Bobbili',\n    'Bodhan',\n    'Bokaro Steel City',\n    'Bongaigaon City',\n    'Brahmapur',\n    'Buxar',\n    'Byasanagar',\n    'Chaibasa',\n    'Chalakudy',\n    'Chandausi',\n    'Chandigarh',\n    'Changanassery',\n    'Charkhi Dadri',\n    'Chatra',\n    'Chennai',\n    'Cherthala',\n    'Chhapra',\n    'Chhapra',\n    'Chikkamagaluru',\n    'Chilakaluripet',\n    'Chirala',\n    'Chirkunda',\n    'Chirmiri',\n    'Chittoor',\n    'Chittur-Thathamangalam',\n    'Coimbatore',\n    'Cuttack',\n    'Dalli-Rajhara',\n    'Darbhanga',\n    'Darjiling',\n    'Davanagere',\n    'Deesa',\n    'Dehradun',\n    'Dehri-on-Sone',\n    'Delhi',\n    'Deoghar',\n    'Dhamtari',\n    'Dhanbad',\n    'Dharmanagar',\n    'Dharmavaram',\n    'Dhenkanal',\n    'Dhoraji',\n    'Dhubri',\n    'Dhule',\n    'Dhuri',\n    'Dibrugarh',\n    'Dimapur',\n    'Diphu',\n    'Dumka',\n    'Dumraon',\n    'Durg',\n    'Eluru',\n    'English Bazar',\n    'Erode',\n    'Etawah',\n    'Faridabad',\n    'Faridkot',\n    'Farooqnagar',\n    'Fatehabad',\n    'Fatehpur Sikri',\n    'Fazilka',\n    'Firozabad',\n    'Firozpur',\n    'Firozpur Cantt.',\n    'Forbesganj',\n    'Gadwal',\n    'Gangarampur',\n    'Ganjbasoda',\n    'Gaya',\n    'Giridih',\n    'Goalpara',\n    'Gobichettipalayam',\n    'Gobindgarh',\n    'Godhra',\n    'Gohana',\n    'Gokak',\n    'Gooty',\n    'Gopalganj',\n    'Gudivada',\n    'Gudur',\n    'Gumia',\n    'Guntakal',\n    'Guntur',\n    'Gurdaspur',\n    'Gurgaon',\n    'Guruvayoor',\n    'Guwahati',\n    'Gwalior',\n    'Habra',\n    'Hajipur',\n    'Haldwani',\n    'Hansi',\n    'Hapur',\n    'Hardoi ',\n    'Hardwar',\n    'Hazaribag',\n    'Hindupur',\n    'Hisar',\n    'Hoshiarpur',\n    'Hubli-Dharwad',\n    'Hugli-Chinsurah',\n    'Hyderabad',\n    'Ichalkaranji',\n    'Imphal',\n    'Indore',\n    'Itarsi',\n    'Jabalpur',\n    'Jagdalpur',\n    'Jaggaiahpet',\n    'Jagraon',\n    'Jagtial',\n    'Jaipur',\n    'Jalandhar',\n    'Jalandhar Cantt.',\n    'Jalpaiguri',\n    'Jamalpur',\n    'Jammalamadugu',\n    'Jammu',\n    'Jamnagar',\n    'Jamshedpur',\n    'Jamui',\n    'Jangaon',\n    'Jatani',\n    'Jehanabad',\n    'Jhansi',\n    'Jhargram',\n    'Jharsuguda',\n    'Jhumri Tilaiya',\n    'Jind',\n    'Jodhpur',\n    'Jorhat',\n    'Kadapa',\n    'Kadi',\n    'Kadiri',\n    'Kagaznagar',\n    'Kailasahar',\n    'Kaithal',\n    'Kakinada',\n    'Kalimpong',\n    'Kalpi',\n    'Kalyan-Dombivali',\n    'Kamareddy',\n    'Kancheepuram',\n    'Kandukur',\n    'Kanhangad',\n    'Kannur',\n    'Kanpur',\n    'Kapadvanj',\n    'Kapurthala',\n    'Karaikal',\n    'Karimganj',\n    'Karimnagar',\n    'Karjat',\n    'Karnal',\n    'Karur',\n    'Karwar',\n    'Kasaragod',\n    'Kashipur',\n    'KathUrban',\n    'Katihar',\n    'Kavali',\n    'Kayamkulam',\n    'Kendrapara',\n    'Kendujhar',\n    'Keshod',\n    'Khair',\n    'Khambhat',\n    'Khammam',\n    'Khanna',\n    'Kharagpur',\n    'Kharar',\n    'Khowai',\n    'Kishanganj',\n    'Kochi',\n    'Kodungallur',\n    'Kohima',\n    'Kolar',\n    'Kolkata',\n    'Kollam',\n    'Koratla',\n    'Korba',\n    'Kot Kapura',\n    'Kothagudem',\n    'Kottayam',\n    'Kovvur',\n    'Koyilandy',\n    'Kozhikode',\n    'Kunnamkulam',\n    'Kurnool',\n    'Kyathampalle',\n    'Lachhmangarh',\n    'Ladnu',\n    'Ladwa',\n    'Lahar',\n    'Laharpur',\n    'Lakheri',\n    'Lakhimpur',\n    'Lakhisarai',\n    'Lakshmeshwar',\n    'Lal Gopalganj Nindaura',\n    'Lalganj',\n    'Lalganj',\n    'Lalgudi',\n    'Lalitpur',\n    'Lalsot',\n    'Lanka',\n    'Lar',\n    'Lathi',\n    'Latur',\n    'Lilong',\n    'Limbdi',\n    'Lingsugur',\n    'Loha',\n    'Lohardaga',\n    'Lonar',\n    'Lonavla',\n    'Longowal',\n    'Loni',\n    'Losal',\n    'Lucknow',\n    'Ludhiana',\n    'Lumding',\n    'Lunawada',\n    'Lunglei',\n    'Macherla',\n    'Machilipatnam',\n    'Madanapalle',\n    'Maddur',\n    'Madhepura',\n    'Madhubani',\n    'Madhugiri',\n    'Madhupur',\n    'Madikeri',\n    'Madurai',\n    'Magadi',\n    'Mahad',\n    'Mahalingapura',\n    'Maharajganj',\n    'Maharajpur',\n    'Mahasamund',\n    'Mahbubnagar',\n    'Mahe',\n    'Mahemdabad',\n    'Mahendragarh',\n    'Mahesana',\n    'Mahidpur',\n    'Mahnar Bazar',\n    'Mahuva',\n    'Maihar',\n    'Mainaguri',\n    'Makhdumpur',\n    'Makrana',\n    'Malaj Khand',\n    'Malappuram',\n    'Malavalli',\n    'Malda',\n    'Malegaon',\n    'Malerkotla',\n    'Malkangiri',\n    'Malkapur',\n    'Malout',\n    'Malpura',\n    'Malur',\n    'Manachanallur',\n    'Manasa',\n    'Manavadar',\n    'Manawar',\n    'Mumbai',\n    'Mundargi',\n    'Mundi',\n    'Mungeli',\n    'Munger',\n    'Murliganj',\n    'Murshidabad',\n    'Murtijapur',\n    'Murwara (Katni)',\n    'Musabani',\n    'Mussoorie',\n    'Muvattupuzha',\n    'Muzaffarpur',\n    'Mysore',\n    'Nabadwip',\n    'Nabarangapur',\n    'Nabha',\n    'Nadbai',\n    'Nadiad',\n    'Nagaon',\n    'Nagapattinam',\n    'Nagar',\n    'Nagari',\n    'Nagarkurnool',\n    'Nagaur',\n    'Nagda',\n    'Nagercoil',\n    'Nagina',\n    'Nagla',\n    'Nagpur',\n    'Nahan',\n    'Naharlagun',\n    'Naidupet',\n    'Naihati',\n    'Naila Janjgir',\n    'Nainital',\n    'Nainpur',\n    'Najibabad',\n    'Nakodar',\n    'Nakur',\n    'Nalbari',\n    'Namagiripettai',\n    'Namakkal',\n    'Nanded-Waghala',\n    'Nandgaon',\n    'Nandivaram-Guduvancheri',\n    'Nandura',\n    'Nandurbar',\n    'Nandyal',\n    'Nangal',\n    'Nanjangud',\n    'Nanjikottai',\n    'Nanpara',\n    'Narasapuram',\n    'Narasaraopet',\n    'Naraura',\n    'Narayanpet',\n    'Nargund',\n    'Narkatiaganj',\n    'Narkhed',\n    'Narnaul',\n    'Narsinghgarh',\n    'Narsinghgarh',\n    'Narsipatnam',\n    'Narwana',\n    'Nashik',\n    'Nasirabad',\n    'Natham',\n    'Nathdwara',\n    'Naugachhia',\n    'Naugawan Sadat',\n    'Nautanwa',\n    'Navalgund',\n    'Navsari',\n    'Nawabganj',\n    'Nawada',\n    'Nawanshahr',\n    'Nawapur',\n    'Nedumangad',\n    'Neem-Ka-Thana',\n    'Neemuch',\n    'Nehtaur',\n    'Nelamangala',\n    'Nellikuppam',\n    'Nellore',\n    'Nepanagar',\n    'New Delhi',\n    'Neyveli (TS)',\n    'Neyyattinkara',\n    'Nidadavole',\n    'Nilambur',\n    'Nilanga',\n    'Nimbahera',\n    'Nirmal',\n    'Niwai',\n    'Niwari',\n    'Nizamabad',\n    'Nohar',\n    'Noida',\n    'Nokha',\n    'Nokha',\n    'Nongstoin',\n    'Noorpur',\n    'North Lakhimpur',\n    'Nowgong',\n    'Nowrozabad (Khodargama)',\n    'Nuzvid',\n    'O Valley',\n    'Obra',\n    'Oddanchatram',\n    'Ongole',\n    'Orai',\n    'Osmanabad',\n    'Ottappalam',\n    'Ozar',\n    'P.N.Patti',\n    'Pachora',\n    'Pachore',\n    'Pacode',\n    'Padmanabhapuram',\n    'Padra',\n    'Padrauna',\n    'Paithan',\n    'Pakaur',\n    'Palacole',\n    'Palai',\n    'Palakkad',\n    'Palampur',\n    'Palani',\n    'Palanpur',\n    'Palasa Kasibugga',\n    'Palghar',\n    'Pali',\n    'Palia Kalan',\n    'Palitana',\n    'Palladam',\n    'Pallapatti',\n    'Pallikonda',\n    'Palwal',\n    'Palwancha',\n    'Panagar',\n    'Panagudi',\n    'Panaji',\n    'Panamattom',\n    'Panchkula',\n    'Panchla',\n    'Pandharkaoda',\n    'Pandharpur',\n    'Pandhurna',\n    'Panipat',\n    'Panna',\n    'Panniyannur',\n    'Panruti',\n    'Panvel',\n    'Pappinisseri',\n    'Paradip',\n    'Paramakudi',\n    'Parangipettai',\n    'Parasi',\n    'Paravoor',\n    'Parbhani',\n    'Pardi',\n    'Parlakhemundi',\n    'Parli',\n    'Partur',\n    'Parvathipuram',\n    'Pasan',\n    'Paschim Punropara',\n    'Pasighat',\n    'Patan',\n    'Pathanamthitta',\n    'Pathankot',\n    'Pathardi',\n    'Pathri',\n    'Patiala',\n    'Patna',\n    'Patratu',\n    'Pattamundai',\n    'Patti',\n    'Pattran',\n    'Pattukkottai',\n    'Patur',\n    'Pauni',\n    'Pauri',\n    'Pavagada',\n    'Pedana',\n    'Peddapuram',\n    'Pehowa',\n    'Pen',\n    'Perambalur',\n    'Peravurani',\n    'Peringathur',\n    'Perinthalmanna',\n    'Periyakulam',\n    'Periyasemur',\n    'Pernampattu',\n    'Perumbavoor',\n    'Petlad',\n    'Phagwara',\n    'Phalodi',\n    'Phaltan',\n    'Phillaur',\n    'Phulabani',\n    'Phulera',\n    'Phulpur',\n    'Phusro',\n    'Pihani',\n    'Pilani',\n    'Pilibanga',\n    'Pilibhit',\n    'Pilkhuwa',\n    'Pindwara',\n    'Pinjore',\n    'Pipar City',\n    'Pipariya',\n    'Piriyapatna',\n    'Piro',\n    'Pithampur',\n    'Pithapuram',\n    'Pithoragarh',\n    'Pollachi',\n    'Polur',\n    'Pondicherry',\n    'Ponnani',\n    'Ponneri',\n    'Ponnur',\n    'Porbandar',\n    'Porsa',\n    'Port Blair',\n    'Powayan',\n    'Prantij',\n    'Pratapgarh',\n    'Pratapgarh',\n    'Prithvipur',\n    'Proddatur',\n    'Pudukkottai',\n    'Pudupattinam',\n    'Pukhrayan',\n    'Pulgaon',\n    'Puliyankudi',\n    'Punalur',\n    'Punch',\n    'Pune',\n    'Punganur',\n    'Punjaipugalur',\n    'Puranpur',\n    'Puri',\n    'Purna',\n    'Purnia',\n    'PurqUrban Agglomerationzi',\n    'Purulia',\n    'Purwa',\n    'Pusad',\n    'Puthuppally',\n    'Puttur',\n    'Puttur',\n    'Qadian',\n    'Raayachuru',\n    'Rabkavi Banhatti',\n    'Radhanpur',\n    'Rae Bareli',\n    'Rafiganj',\n    'Raghogarh-Vijaypur',\n    'Raghunathganj',\n    'Raghunathpur',\n    'Rahatgarh',\n    'Rahuri',\n    'Raiganj',\n    'Raigarh',\n    'Raikot',\n    'Raipur',\n    'Rairangpur',\n    'Raisen',\n    'Raisinghnagar',\n    'Rajagangapur',\n    'Rajahmundry',\n    'Rajakhera',\n    'Rajaldesar',\n    'Rajam',\n    'Rajampet',\n    'Rajapalayam',\n    'Rajauri',\n    'Rajgarh',\n    'Rajgarh (Alwar)',\n    'Rajgarh (Churu)',\n    'Rajgir',\n    'Rajkot',\n    'Rajnandgaon',\n    'Rajpipla',\n    'Rajpura',\n    'Rajsamand',\n    'Rajula',\n    'Rajura',\n    'Ramachandrapuram',\n    'Ramagundam',\n    'Ramanagaram',\n    'Ramanathapuram',\n    'Ramdurg',\n    'Rameshwaram',\n    'Ramganj Mandi',\n    'Ramgarh',\n    'Ramnagar',\n    'Ramngarh',\n    'Rampur',\n    'Rampur Maniharan',\n    'Rampura Phul',\n    'Rampurhat',\n    'Ramtek',\n    'Ranaghat',\n    'Ranavav',\n    'Ranchi',\n    'Ranebennuru',\n    'Rangia',\n    'Rania',\n    'Ranibennur',\n    'Ranipet',\n    'Rapar',\n    'Rasipuram',\n    'Rasra',\n    'Ratangarh',\n    'Rath',\n    'Ratia',\n    'Ratlam',\n    'Ratnagiri',\n    'Rau',\n    'Raurkela',\n    'Raver',\n    'Rawatbhata',\n    'Rawatsar',\n    'Raxaul Bazar',\n    'Rayachoti',\n    'Rayadurg',\n    'Rayagada',\n    'Reengus',\n    'Rehli',\n    'Renigunta',\n    'Renukoot',\n    'Reoti',\n    'Repalle',\n    'Revelganj',\n    'Rewa',\n    'Rewari',\n    'Rishikesh',\n    'Risod',\n    'Robertsganj',\n    'Robertson Pet',\n    'Rohtak',\n    'Ron',\n    'Roorkee',\n    'Rosera',\n    'Rudauli',\n    'Rudrapur',\n    'Rudrapur',\n    'Rupnagar',\n    'Sabalgarh',\n    'Sadabad',\n    'Sadalagi',\n    'Sadasivpet',\n    'Sadri',\n    'Sadulpur',\n    'Sadulshahar',\n    'Safidon',\n    'Safipur',\n    'Sagar',\n    'Sagara',\n    'Sagwara',\n    'Saharanpur',\n    'Saharsa',\n    'Sahaspur',\n    'Sahaswan',\n    'Sahawar',\n    'Sahibganj',\n    'Sahjanwa',\n    'Saidpur',\n    'Saiha',\n    'Sailu',\n    'Sainthia',\n    'Sakaleshapura',\n    'Sakti',\n    'Salaya',\n    'Salem',\n    'Salur',\n    'Samalkha',\n    'Samalkot',\n    'Samana',\n    'Samastipur',\n    'Sambalpur',\n    'Sambhal',\n    'Sambhar',\n    'Samdhan',\n    'Samthar',\n    'Sanand',\n    'Sanawad',\n    'Sanchore',\n    'Sandi',\n    'Sandila',\n    'Sanduru',\n    'Sangamner',\n    'Sangareddy',\n    'Sangaria',\n    'Sangli',\n    'Sangole',\n    'Sangrur',\n    'Sankarankovil',\n    'Sankari',\n    'Sankeshwara',\n    'Santipur',\n    'Sarangpur',\n    'Sardarshahar',\n    'Sardhana',\n    'Sarni',\n    'Sarsod',\n    'Sasaram',\n    'Sasvad',\n    'Satana',\n    'Satara',\n    'Sathyamangalam',\n    'Satna',\n    'Sattenapalle',\n    'Sattur',\n    'Saunda',\n    'Saundatti-Yellamma',\n    'Sausar',\n    'Savanur',\n    'Savarkundla',\n    'Savner',\n    'Sawai Madhopur',\n    'Sawantwadi',\n    'Sedam',\n    'Sehore',\n    'Sendhwa',\n    'Seohara',\n    'Seoni',\n    'Seoni-Malwa',\n    'Shahabad',\n    'Shahabad, Hardoi',\n    'Shahabad, Rampur',\n    'Shahade',\n    'Shahdol',\n    'Shahganj',\n    'Shahjahanpur',\n    'Shahpur',\n    'Shahpura',\n    'Shajapur',\n    'Shamgarh',\n    'Shamli',\n    'Shamsabad, Agra',\n    'Shamsabad, Farrukhabad',\n    'Shegaon',\n    'Sheikhpura',\n    'Shendurjana',\n    'Shenkottai',\n    'Sheoganj',\n    'Sheohar',\n    'Sheopur',\n    'Sherghati',\n    'Sherkot',\n    'Shiggaon',\n    'Shikaripur',\n    'Shikarpur, Bulandshahr',\n    'Shikohabad',\n    'Shillong',\n    'Shimla',\n    'Shirdi',\n    'Shirpur-Warwade',\n    'Shirur',\n    'Shishgarh',\n    'Shivamogga',\n    'Shivpuri',\n    'Sholavandan',\n    'Sholingur',\n    'Shoranur',\n    'Shrigonda',\n    'Shrirampur',\n    'Shrirangapattana',\n    'Shujalpur',\n    'Siana',\n    'Sibsagar',\n    'Siddipet',\n    'Sidhi',\n    'Sidhpur',\n    'Sidlaghatta',\n    'Sihor',\n    'Sihora',\n    'Sikanderpur',\n    'Sikandra Rao',\n    'Sikandrabad',\n    'Sikar',\n    'Silao',\n    'Silapathar',\n    'Silchar',\n    'Siliguri',\n    'Sillod',\n    'Silvassa',\n    'Simdega',\n    'Sindagi',\n    'Sindhagi',\n    'Sindhnur',\n    'Singrauli',\n    'Sinnar',\n    'Sira',\n    'Sircilla',\n    'Sirhind Fatehgarh Sahib',\n    'Sirkali',\n    'Sirohi',\n    'Sironj',\n    'Sirsa',\n    'Sirsaganj',\n    'Sirsi',\n    'Siruguppa',\n    'Sitamarhi',\n    'Sitapur',\n    'Sitarganj',\n    'Sivaganga',\n    'Sivagiri',\n    'Sivakasi',\n    'Siwan',\n    'Sohagpur',\n    'Sohna',\n    'Sojat',\n    'Solan',\n    'Solapur',\n    'Sonamukhi',\n    'Sonepur',\n    'Songadh',\n    'Sonipat',\n    'Sopore',\n    'Soro',\n    'Soron',\n    'Soyagaon',\n    'Sri Madhopur',\n    'Srikakulam',\n    'Srikalahasti',\n    'Srinagar',\n    'Srinagar',\n    'Srinivaspur',\n    'Srirampore',\n    'Srivilliputhur',\n    'Sugauli',\n    'Sujangarh',\n    'Sujanpur',\n    'Sullurpeta',\n    'Sultanganj',\n    'Sultanpur',\n    'Sumerpur',\n    'Sumerpur',\n    'Sunabeda',\n    'Sunam',\n    'Sundargarh',\n    'Sundarnagar',\n    'Supaul',\n    'Surandai',\n    'Surapura',\n    'Surat',\n    'Suratgarh',\n    'SUrban Agglomerationr',\n    'Suri',\n    'Suriyampalayam',\n    'Suryapet',\n    'Tadepalligudem',\n    'Tadpatri',\n    'Takhatgarh',\n    'Taki',\n    'Talaja',\n    'Talcher',\n    'Talegaon Dabhade',\n    'Talikota',\n    'Taliparamba',\n    'Talode',\n    'Talwara',\n    'Tamluk',\n    'Tanda',\n    'Tandur',\n    'Tanuku',\n    'Tarakeswar',\n    'Tarana',\n    'Taranagar',\n    'Taraori',\n    'Tarbha',\n    'Tarikere',\n    'Tarn Taran',\n    'Tasgaon',\n    'Tehri',\n    'Tekkalakote',\n    'Tenali',\n    'Tenkasi',\n    'Tenu dam-cum-Kathhara',\n    'Terdal',\n    'Tezpur',\n    'Thakurdwara',\n    'Thammampatti',\n    'Thana Bhawan',\n    'Thane',\n    'Thanesar',\n    'Thangadh',\n    'Thanjavur',\n    'Tharad',\n    'Tharamangalam',\n    'Tharangambadi',\n    'Theni Allinagaram',\n    'Thirumangalam',\n    'Thirupuvanam',\n    'Thiruthuraipoondi',\n    'Thiruvalla',\n    'Thiruvallur',\n    'Thiruvananthapuram',\n    'Thiruvarur',\n    'Thodupuzha',\n    'Thoubal',\n    'Thrissur',\n    'Thuraiyur',\n    'Tikamgarh',\n    'Tilda Newra',\n    'Tilhar',\n    'Tindivanam',\n    'Tinsukia',\n    'Tiptur',\n    'Tirora',\n    'Tiruchendur',\n    'Tiruchengode',\n    'Tiruchirappalli',\n    'Tirukalukundram',\n    'Tirukkoyilur',\n    'Tirunelveli',\n    'Tirupathur',\n    'Tirupati',\n    'Tiruppur',\n    'Tirur',\n    'Tiruttani',\n    'Tiruvannamalai',\n    'Tiruvethipuram',\n    'Tiruvuru',\n    'Tirwaganj',\n    'Titlagarh',\n    'Tittakudi',\n    'Todabhim',\n    'Todaraisingh',\n    'Tohana',\n    'Tonk',\n    'Tuensang',\n    'Tuljapur',\n    'Tulsipur',\n    'Tumkur',\n    'Tumsar',\n    'Tundla',\n    'Tuni',\n    'Tura',\n    'Uchgaon',\n    'Udaipur',\n    'Udaipurwati',\n    'Udgir',\n    'Udhagamandalam',\n    'Udhampur',\n    'Udumalaipettai',\n    'Udupi',\n    'Ujhani',\n    'Ujjain',\n    'Umarga',\n    'Umaria',\n    'Umarkhed',\n    'Umbergaon',\n    'Umred',\n    'Umreth',\n    'Una',\n    'Unjha',\n    'Unnamalaikadai',\n    'Unnao',\n    'Upleta',\n    'Uran',\n    'Uran Islampur',\n    'Uravakonda',\n    'Urmar Tanda',\n    'Usilampatti',\n    'Uthamapalayam',\n    'Uthiramerur',\n    'Utraula',\n    'Vadakkuvalliyur',\n    'Vadalur',\n    'Vadgaon Kasba',\n    'Vadipatti',\n    'Vadnagar',\n    'Vadodara',\n    'Vaijapur',\n    'Vaikom',\n    'Valparai',\n    'Valsad',\n    'Vandavasi',\n    'Vaniyambadi',\n    'Vapi',\n    'Vapi',\n    'Varanasi',\n    'Varkala',\n    'Vasai-Virar',\n    'Vatakara',\n    'Vedaranyam',\n    'Vellakoil',\n    'Vellore',\n    'Venkatagiri',\n    'Veraval',\n    'Vidisha',\n    'Vijainagar, Ajmer',\n    'Vijapur',\n    'Vijayapura',\n    'Vijayawada',\n    'Vijaypur',\n    'Vikarabad',\n    'Vikramasingapuram',\n    'Viluppuram',\n    'Vinukonda',\n    'Viramgam',\n    'Virudhachalam',\n    'Virudhunagar',\n    'Visakhapatnam',\n    'Visnagar',\n    'Viswanatham',\n    'Vita',\n    'Vizianagaram',\n    'Vrindavan',\n    'Vyara',\n    'Wadgaon Road',\n    'Wadhwan',\n    'Wadi',\n    'Wai',\n    'Wanaparthy',\n    'Wani',\n    'Wankaner',\n    'Wara Seoni',\n    'Warangal',\n    'Wardha',\n    'Warhapur',\n    'Warisaliganj',\n    'Warora',\n    'Warud',\n    'Washim',\n    'Wokha',\n    'Yadgir',\n    'Yamunanagar',\n    'Yanam',\n    'Yavatmal',\n    'Yawal',\n    'Yellandu',\n    'Yemmiganur',\n    'Yerraguntla',\n    'Yevla',\n    'Zaidpur',\n    'Zamania',\n    'Zira',\n    'Zirakpur',\n    'Zunheboto'\n  ];\n\n  user: any;\n\n  deletedDriverAllowance = [];\n  deletedSMSNumber = [];\n  deletedEmailAddresses = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private businessSettingService: BusinesssettingService,\n    private auth: AuthService,\n    private customerService: CustomerService,\n    private router: Router,\n    private branchService: NewBranchService,\n    private snackBar: MatSnackBar,\n  ) { }\n\n  ngOnInit() {\n    this.auth.user.subscribe(data => {\n      this.user = data[0]\n      console.log(this.user)\n      this.customerService.getCustomers(this.user).subscribe(data => {\n        this.customers = data;\n        this.customer = this.customerCtrl.valueChanges\n        .pipe(\n          startWith(''),\n          map(val => this.filterCustomer(val))\n        );\n      });\n      this.branchService.getBranches(this.user).subscribe(data => {\n        console.log(data)\n        this.dispatchCenters = data;\n      })\n      this.businessSettingService.getBusinessSettings(this.user).subscribe(data => {\n        console.log(data)\n        if(data.length != 0) {\n          this.editState = true;\n          this.businessSettings = data[0];\n          this.customerCtrl.setValue(this.businessSettings.defaultCustomer);\n          this.cityCtrl.setValue(this.businessSettings.defaultCity);\n          console.log(this.businessSettings)\n          var temp = {\n            ownerId: this.user.ownerId,\n            businessSettingsId: data[0].id,\n          }\n          this.businessSettingService.getDriverAllowances(temp).subscribe(data => {\n            console.log(data);\n            data.forEach(element => {\n              const row = this.fb.group({\n                id: element.id,\n                allowanceType: element.allowanceType,\n                chargedToCustomer: element.chargedToCustomer,\n                amount: element.amount,\n              })\n              this.driverAllowancesForms.push(row);\n            });\n          })\n          if(this.businessSettings.SMSEnabled == true) {\n            this.businessSettingService.getSMSPhoneNumbers(temp).subscribe(data => {\n              console.log(data);\n              data.forEach(element => {\n                const row = this.fb.group({\n                  id: element.id,\n                  phoneNumber: element.phoneNumber\n                })\n                this.SMSPhoneNumbersForms.push(row);\n              });\n            })\n          }\n          if(this.businessSettings.EmailEnabled == true) {\n            this.businessSettingService.getEmailAddresses(temp).subscribe(data => {\n              console.log(data);\n              data.forEach(element => {\n                const row = this.fb.group({\n                  id: element.id,\n                  emailAddress: element.emailAddress\n                })\n                this.EmailAddressForms.push(row);\n              });\n            })\n          }\n        }\n        else {\n          this.addDriverAllowance();\n        }\n      })\n    })\n\n    this.cities = this.cityCtrl.valueChanges\n    .pipe(\n      startWith(''),\n      map(val => this.filterCity(val))\n    );\n\n    this.driverAllowanceForm = this.fb.group({\n      rows: this.fb.array([])\n    })\n\n    this.SMSPhoneNumbersForm = this.fb.group({\n      rows: this.fb.array([])\n    })\n\n    this.EmailAddressForm = this.fb.group({\n      rows: this.fb.array([])\n    })    \n  }\n\n  filterCustomer(val:string) {\n    return this.customers.filter(option =>\n      option.name.toLowerCase().includes(val.toLowerCase()))\n  }\n  filterCity(val: string): string[] {\n    return this.city.filter(option =>\n      option.toLowerCase().includes(val.toLowerCase()));\n  }\n\n  get driverAllowancesForms() {\n    return this.driverAllowanceForm.get('rows') as FormArray;\n  }\n  addDriverAllowance(){\n    const row = this.fb.group({      \n      allowanceType: [''],\n      chargedToCustomer: [false],\n      amount: [0]\n    })\n    this.driverAllowancesForms.push(row);\n  }\n  deleteDriverAllowance(i, aRow) {    \n    this.driverAllowancesForms.removeAt(i);\n    if(aRow.value.id != '') {\n      this.deletedDriverAllowance.push(aRow.value)\n    }\n  }\n\n  get SMSPhoneNumbersForms() {\n    return this.SMSPhoneNumbersForm.get('rows') as FormArray;\n  }\n  addSMSPhoneNumber(){\n    const row = this.fb.group({      \n      phoneNumber: [0]\n    })\n    this.SMSPhoneNumbersForms.push(row);\n  }\n  deleteSMSPhoneNumber(i, aRow) {    \n    this.SMSPhoneNumbersForms.removeAt(i);\n    if(aRow.value.id != '') {\n      this.deletedSMSNumber.push(aRow.value)\n    }\n  }\n\n  get EmailAddressForms() {\n    return this.EmailAddressForm.get('rows') as FormArray;\n  }\n  addEmailAddress(){\n    const row = this.fb.group({\n      emailAddress: ['']\n    })\n    this.EmailAddressForms.push(row);\n  }\n  deleteEmailAddress(i, aRow) {    \n    this.EmailAddressForms.removeAt(i);\n    if(aRow.value.id != '') {\n      this.deletedEmailAddresses.push(aRow.value)\n    }\n  }\n\n  saveDutiesBookings() {\n    \n  }\n\n  selectInvoiceDatesAndNumbering(temp) {\n    this.businessSettings.invoiceDatesAndNumbering = temp;\n  }\n\n  selectProvider(temp) {\n    this.businessSettings.trackingProvider = temp;\n  }\n\n  saveBilling() {\n    \n  }\n\n  savePurchase() {\n    \n  }\n\n  setCustomer(temp,event:any) {\n    if(event.source.selected == true) {\n      this.businessSettings.defaultCustomer = temp.name;\n    }\n  }\n\n  setCity(temp,event:any) {\n    if(event.source.selected == true) {\n      this.businessSettings.defaultCity = temp;\n    }\n  }\n\n  setDispatchCenter(temp) {\n   this.businessSettings.dispatchCenter = temp;\n  }\n\n  saveOthers() {\n    \n  }\n\n  saveDriverAllowance() {\n    \n  }\n\n  saveNotification() {\n    \n  }\n\n  saveEmailTemplates() {\n    \n  }\n\n  saveBusinessSettings() {\n    console.log(this.businessSettings);\n    this.businessSettings.ownerID = this.user.ownerId;\n    this.businessSettingService.addBusinessSettings(this.businessSettings).subscribe(data => {\n      this.driverAllowancesForms.value.forEach(element => {      \n        element.businessSettingsId = data.insertId;\n        element.ownerId = this.user.ownerId;\n        this.businessSettingService.addDriverAllowances(element).subscribe(data => {})\n      });\n      if(this.businessSettings.SMSEnabled == true) {\n        this.SMSPhoneNumbersForms.value.forEach(element => {\n          element.businessSettingsId = data.insertId;\n          element.ownerId = this.user.ownerId;\n          this.businessSettingService.addSMSPhoneNumbers(element).subscribe(data => {})\n        });\n      }\n      if(this.businessSettings.EmailEnabled == true) {\n        this.EmailAddressForms.value.forEach(element => {\n          element.businessSettingsId = data.insertId;\n          element.ownerId = this.user.ownerId;\n          this.businessSettingService.addEmailAddresses(element).subscribe(data => {})\n        });    \n      }\n    },err=>{},()=>{\n      this.snackBar.open(\"Business Settings Saved\", \"X\", {duration: 3000});\n      this.router.navigateByUrl('/pages/circles/businesssetting');\n    })    \n  }\n\n  updateBusinessSettings() {\n    this.businessSettings.ownerID = this.user.ownerId;\n    this.businessSettingService.updateBusinessSettings(this.businessSettings).subscribe(data => {\n      this.driverAllowancesForms.value.forEach(element => {\n        if(element.id == '') {\n          element.businessSettingsId = this.businessSettings.id;\n          element.ownerId = this.businessSettings.ownerID;\n          this.businessSettingService.addDriverAllowances(element).subscribe(data => {\n            element.id=data.insertId\n          })\n        }\n        else {\n          this.businessSettingService.updateDriverAllowances(element).subscribe(data => {})\n        }\n      });\n      if(this.deletedDriverAllowance.length > 0) {\n        this.deletedDriverAllowance.forEach(element => {\n          this.businessSettingService.deleteDriverAllowances(element).subscribe(data=>{});\n        })\n      }\n      if(this.businessSettings.SMSEnabled == true) {\n        this.SMSPhoneNumbersForms.value.forEach(element => {\n          if(element.id == '') {\n            element.businessSettingsId = this.businessSettings.id;\n            element.ownerId = this.businessSettings.ownerID;\n            this.businessSettingService.addSMSPhoneNumbers(element).subscribe(data => {\n              element.id = data.insertId\n            })\n          }\n          else {\n            this.businessSettingService.updateSMSPhoneNumbers(element).subscribe(data => {})\n          }\n        });\n        if(this.deletedSMSNumber.length > 0) {\n          this.deletedSMSNumber.forEach(element => {\n            this.businessSettingService.deleteSMSPhoneNumbers(element).subscribe(data=>{});\n          })\n        }\n      }\n      if(this.businessSettings.EmailEnabled == true) {\n        this.EmailAddressForms.value.forEach(element => {\n          if(element.id == '') {\n            element.businessSettingsId = this.businessSettings.id;\n            element.ownerId = this.businessSettings.ownerID;\n            this.businessSettingService.addEmailAddresses(element).subscribe(data => {\n              element.id = data.insertId\n            })\n          }\n          else {\n            this.businessSettingService.updateEmailAddresses(element).subscribe(data => {})\n          }\n        });\n        if(this.deletedEmailAddresses.length > 0) {\n          this.deletedEmailAddresses.forEach(element => {\n            this.businessSettingService.deleteEmailAddresses(element).subscribe(data=>{});\n          })\n        }        \n      }\n      this.auth.changeBusinessSettings(this.businessSettings) \n    },err=>{},()=>{\n      this.snackBar.open(\"Business Settings Saved\", \"X\", {duration: 3000});\n      this.router.navigateByUrl('/pages/circles/businesssetting');\n    })\n    // this.router.navigateByUrl('/pages/circles/businesssetting');\n  }\n}\n\nexport interface BusinessSettings {\n  id?: string;\n  ownerID?: string;\n  AllowBookingsToBeAddedWithoutAnyPricing?: Boolean;\n  AutoSendAllotmentNotificationToDriverApp?: Boolean;\n  UseBookingsIDInSMS?: Boolean;\n  DefaultStartFromGarage?: string;\n  RoundOffDutySlipTimeToNearestHour?: Boolean;\n  ShowGarageStartTimeInsteadOfReportingTime?: Boolean;\n  ShowFromCity?: Boolean;\n  ShowDropAddress?: Boolean;\n  ShowRemarks?: Boolean;\n  ShowVehicleGroup?: Boolean;\n  ShowLabels?: Boolean;\n  AddCustomerName?: Boolean;\n  AddBookedByName?: Boolean;\n  AddAllPassengerNamesAndNumbers?: Boolean;\n  HideVehicleName?: Boolean;\n  HideRemarks?: Boolean;\n  AddGarageStartTime?: Boolean;\n  AddReleasedKmTimeSection?: Boolean;\n  AddEntireBookingDateRange?: Boolean;\n  AddPrintedByInformationToFooter?: Boolean;\n  AlwaysUseFullPageDesign?: Boolean;\n  HideBusinessLetterHead?: Boolean;\n  HideCustomerNameForDriverSupplierInMobileApp?: Boolean;\n  invoiceDatesAndNumbering?: string,\n  RoundOffExtraTimeOfEveryDutyWhileDisplayingOnInvoice?: Boolean,\n  ShowPerKilometerRateOnInvoiceForDayKMDuties?: Boolean,\n  HideVehicleNumberFromInvoice?: Boolean,\n  ShowDutySummaryAtTheTopOfTheInvoiceAlways?: Boolean,\n  ShowDutyId?: Boolean,\n  ShowDutyType?: Boolean,\n  ShowBookedByName?: Boolean,\n  ShowPassengerNames?: Boolean,\n  ShowVehicleGroupName?: Boolean,\n  ShowVehicleNumber?: Boolean,\n  ShowStartDate?: Boolean,\n  ShowEndDate?: Boolean,\n  ShowStartTime?: Boolean,\n  ShowEndTime?: Boolean,\n  ShowExtraHour?: Boolean,\n  ShowTotalHour?: Boolean,\n  ShowStartKM?: Boolean,\n  ShowEndKM?: Boolean,\n  ShowExtraKM?: Boolean,\n  ShowTotalKM?: Boolean,\n  ShowExtraHourRate?: Boolean,\n  ShowExtraKMRate?: Boolean,\n  ShowExtraHourCost?: Boolean,\n  ShowExtraKMCost?: Boolean,\n  ShowConsolidatedBillingItems?: Boolean,\n  ShowSeparatedBillingItems?: Boolean,\n  ShowAllowances?: Boolean,\n  ShowPrice?: Boolean,\n  ShowQuantityNumberOfDays?: Boolean,\n  ShowTotalPrice?: Boolean,\n  ShowCarHireCharges?: Boolean,\n  ShowDutySubtotal?: Boolean,\n  ShowDutySubtotalIncludingAllowances?: Boolean,\n  ShowPurchaseDutyID?: Boolean,\n  ShowPurchaseDutyType?: Boolean,\n  ShowPurchaseBookedByName?: Boolean,\n  ShowPurchasePassengerNames?: Boolean,\n  ShowPurchaseVehicleGroupName?: Boolean,\n  ShowPurchaseVehicleNumber?: Boolean,\n  ShowPurchaseStartDate?: Boolean,\n  ShowPurchaseEndDate?: Boolean,\n  ShowPurchaseStartTime?: Boolean,\n  ShowPurchaseEndTime?: Boolean,\n  ShowPurchaseExtraHour?: Boolean,\n  ShowPurchaseTotalHours?: Boolean,\n  ShowPurchaseStartKM?: Boolean,\n  ShowPurchaseEndKM?: Boolean,\n  ShowPurchaseExtraKM?: Boolean,\n  ShowPurchaseTotalKm?: Boolean,\n  ShowPurchaseExtraHourRate?: Boolean,\n  ShowPurchaseExtraKMRate?: Boolean,\n  ShowPurchaseExtraHourCost?: Boolean,\n  ShowPurchaseExtraKMCost?: Boolean,\n  ShowPurchaseConsolidatedBillingItems?: Boolean,\n  ShowPurchaseSeparatedBillingItems?: Boolean,\n  ShowPurchaseAllowances?: Boolean,\n  ShowPurchasePrice?: Boolean,\n  ShowPurchaseDutySubtotal?: Boolean,\n  ShowCustomerCarHireCharges?: Boolean,\n  ShowCustomerCarHireChargesIncludingAllowances?: Boolean,\n  ShowCustomerDutySubtotal?: Boolean,\n  ShowCustomerDutySubtotalIncludingAllowances?: Boolean,\n  defaultCustomer?: string,\n  dispatchCenter?: string,\n  defaultCity?: string,\n  AutoCCEmail?: string,\n  CCAllConfirmationAndCancellationEmails?: Boolean,\n  CCAllAllotmentEmails?: Boolean,\n  CCAllInvoiceEmails?: Boolean,\n  SMSMask?: string,\n  AutoAcceptIncomingDutySlip?: Boolean,\n  bookingConfirmationHeader?: string,\n  bookingConfirmationFooter?: string,\n  dutyAllotmentToCustomerHeader?: string,\n  dutyAllotmentToCustomerFooter?: string,\n  dutyAllotmentToSupplierHeader?: string,\n  dutyAllotmentToSupplierFooter?: string,\n  dutyBookingCancellationHeader?: string,\n  dutyBookingCancellationFooter?: string,\n  invoiceToCustomerHeader?: string,\n  invoiceToCustomerFooter?: string,\n  paymentRequestHeader?: string,\n  paymentRequestFooter?: string,\n  SMSEnabled?: Boolean,\n  EmailEnabled?: Boolean,\n  trackingProvider?: string,\n  trackingUsername?: string,\n  trackingPassword?: string,\n  defaultTermsAndConditions?: string,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/circles/businesssetting/businesssetting.component.ts","module.exports = \"<div>\\n    <nb-card>\\n        <nb-card-header>\\n            Circle Requests\\n        </nb-card-header>\\n        <nb-card-body>\\n\\n            <div align=\\\"center\\\">\\n                <mat-form-field class=\\\"filter-field\\\">\\n                    <input matInput   placeholder=\\\"Filter\\\"   [(ngModel)]=\\\"searchTerm\\\" (keyup)=\\\"search($event.target.value)\\\">\\n                </mat-form-field>\\n        \\n                <button mat-icon-button><mat-icon class=\\\"filter-icon\\\">search</mat-icon></button>\\n                <button mat-icon-button (click)=\\\"clear()\\\"><mat-icon class=\\\"filter-icon\\\">highlight_off</mat-icon></button>\\n            </div>\\n\\n            <mat-table #table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n                <!-- Name Column -->\\n                <ng-container matColumnDef=\\\"name\\\">\\n                 <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\n                 <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\n               </ng-container>\\n       \\n               <ng-container matColumnDef=\\\"phone\\\">\\n                 <mat-header-cell *matHeaderCellDef mat-sort-header> Contact Number </mat-header-cell>\\n                 <mat-cell *matCellDef=\\\"let element\\\"> {{element.phone}} </mat-cell>\\n               </ng-container>\\n       \\n               <ng-container matColumnDef=\\\"alternatePhone\\\">\\n                 <mat-header-cell *matHeaderCellDef mat-sort-header> Alternate Number </mat-header-cell>\\n                 <mat-cell *matCellDef=\\\"let element\\\"> {{element.alternatePhone}} </mat-cell>\\n               </ng-container>\\n       \\n               <ng-container matColumnDef=\\\"email\\\">\\n                 <mat-header-cell *matHeaderCellDef mat-sort-header> Email </mat-header-cell>\\n                 <mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </mat-cell>\\n               </ng-container>\\n       \\n               <ng-container matColumnDef=\\\"headOfficeCity\\\">\\n                 <mat-header-cell *matHeaderCellDef mat-sort-header> City </mat-header-cell>\\n                 <mat-cell *matCellDef=\\\"let element\\\"> {{element.headOfficeCity}} </mat-cell>\\n               </ng-container>\\n       \\n               <ng-container matColumnDef=\\\"state\\\">\\n                 <mat-header-cell *matHeaderCellDef mat-sort-header> State </mat-header-cell>\\n                 <mat-cell *matCellDef=\\\"let element\\\"> {{element.state}} </mat-cell>\\n               </ng-container>\\n       \\n               <ng-container matColumnDef=\\\"Options\\\">\\n                   <mat-header-cell *matHeaderCellDef> Options </mat-header-cell>\\n                   <mat-cell *matCellDef=\\\"let element ;let row\\\">\\n                        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"accept(element)\\\"><mat-icon>done</mat-icon></button>\\n                        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"decline(element)\\\"><mat-icon>clear</mat-icon></button>\\n                   </mat-cell>\\n                 </ng-container>\\n       \\n                 <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n               <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n       \\n             </mat-table>\\n             <mat-paginator [length]=\\\"length\\\"\\n              [pageSize]=\\\"pageSize\\\"\\n              [pageSizeOptions]=\\\"pageSizeOptions\\\"></mat-paginator>\\n\\n        </nb-card-body>\\n    </nb-card>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/circles/circlerequests/circlerequests.component.html\n// module id = ./src/app/pages/circles/circlerequests/circlerequests.component.html\n// module chunks = circles.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/circles/circlerequests/circlerequests.component.scss\n// module id = ./src/app/pages/circles/circlerequests/circlerequests.component.scss\n// module chunks = circles.module","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CircleService } from '../circle.service';\nimport { User } from '../../../core/user';\nimport { AuthService } from '../../../core/auth.service';\nimport { CompanyprofileService } from '../companyprofile/companyprofile.service';\nimport { Customer } from '../../masters/customer';\nimport { Supplier } from '../../masters/addsuppliers/supplier';\nimport { CustomerService } from '../../masters/customer/customer.service';\nimport { SupplierService } from '../../masters/addsuppliers/supplier.service';\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\nimport { SubUserService } from '../../masters/sub-users/sub-user.service';\nimport { SubUser } from '../../masters/sub-users/sub-user';\n\n@Component({\n  selector: 'app-circlerequests',\n  templateUrl: './circlerequests.component.html',\n  styleUrls: ['./circlerequests.component.scss']\n})\nexport class CirclerequestsComponent implements OnInit {\n\n  length;\n  pageSize = 10;  // set default to 10\n  pageSizeOptions = [10, 15, 25, 40];\n  dataSource=new MatTableDataSource;\n  displayedColumns=[\"name\",\"phone\",\"alternatePhone\",\"email\",\"headOfficeCity\",\"state\",\"Options\"]\n\n  user:User={};\n  customer:Customer={};\n  supplier:Supplier={};\n  searchTerm:any;\n  permission:SubUser={};\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator:MatPaginator;\n  constructor(private circleService:CircleService, \n    private auth:AuthService,\n    private companyProfileService:CompanyprofileService,\n    private customerService:CustomerService,\n    private supplierService:SupplierService,\n    private permissionService:SubUserService) { }\n\n  ngOnInit() {\n\n    this.auth.user.subscribe(data=> {\n      this.user=data[0]\n      this.auth.permissions.subscribe(data => {\n        this.permission=data[0];\n        if(this.permission.acceptDeclineCircleRequests === 0) {\n          this.displayedColumns.pop();\n        }\n      })\n      this.circleService.getRequests(this.user.ownerId).subscribe(data=> {\n        this.dataSource.data = data;\n        this.length = data.length;\n      })\n    })\n\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n\n  }\n  accept(temp:any)\n  {\n    \n    var i=this.dataSource.data.indexOf(temp);\n    this.dataSource.data.splice(i,1);\n    var supplier={\n      ownerName:temp.name,\n      ownerId:temp.fromOwnerId,\n      supplierId:this.user.ownerId,\n      supplierName:this.user.name\n    }\n\n    var circleData={\n      supplier:supplier,\n      id:temp.id\n    }\n    console.log(supplier);\n    this.circleService.acceptRequest(circleData).subscribe(data=> {\n      console.log(data)\n      if(data.affectedRows==1)\n      {\n        //to do this only if not following online offline  supplier approach\n        //add to request senders supplier db\n        var userData={\n          ownerId:this.user.ownerId\n        }\n        this.companyProfileService.getCompanyProfile(userData).subscribe(data=> {\n          console.log(data)\n          //put in supplier object and put his ownerid then insert\n          console.log(data);\n          this.supplier.ownerId=supplier.ownerId;\n          this.supplier.supplierOwnerId=this.user.ownerId;\n \n          this.supplier.name=data[0].name;\n          this.supplier.billingName=data[0].name;\n \n          this.supplier.saddress=data[0].address;\n          this.supplier.billingAddress=data[0].address;\n \n          this.supplier.headOfficeCity = data[0].headOfficeCity;\n          this.supplier.state=data[0].state;\n          this.supplier.billingState=data[0].state;\n \n          this.supplier.phone=data[0].phone;\n          this.supplier.billingPhone=data[0].phone;\n \n          this.supplier.email=data[0].email;\n          //this.supplier.billingEmail=data[0].email;\n \n          this.supplier.panNo=data[0].email;\n                \n          this.supplier.gstin=data[0].gstin;\n          console.log(this.supplier);\n          this.supplierService.addSupplier(this.supplier).subscribe(data=> {\n            console.log(data);\n          })\n                        \n        })\n            \n\n\n        ///add to his  own customer db \n            \n        var userData2={\n          ownerId:temp.fromOwnerId\n        }\n        this.companyProfileService.getCompanyProfile(userData2).subscribe(data=> {\n          console.log(data);\n          this.customer.ownerId=this.user.ownerId;\n          this.customer.customerOwnerId=supplier.ownerId;\n          this.customer.name=data[0].name;\n          this.customer.billingName=data[0].name;\n\n          this.customer.caddress=data[0].address;\n          this.customer.billingAddress=data[0].address;\n          \n          this.customer.state=data[0].state;\n          this.customer.billingState=data[0].state;\n\n          this.customer.phone=data[0].phone;\n          this.customer.billingPhone=data[0].phone;\n\n          this.customer.email=data[0].email;\n          this.customer.billingEmail=data[0].email;\n\n          this.customer.panNo=data[0].email;\n               \n\n          this.customer.gstin=data[0].gstin;\n              \n          this.customerService.addCustomer(this.customer).subscribe(data=> {\n            console.log(data);\n          })\n               \n\n          //put in customer object and replace his owner id to own then  insert in own db\n        })\n      }\n    })\n  }\n  decline(temp:any)\n  {\n    var circleData=\n    {\n      id:temp.id\n    }\n\n    this.circleService.declineRequest(circleData).subscribe()\n  }\n\n  search(filter:string)\n  {\n    this.dataSource.filter = filter.trim().toLowerCase();\n  }\n\n  clear()\n  {\n    this.searchTerm=\"\"\n  }\n \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/circles/circlerequests/circlerequests.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CirclesdisplayComponent } from './circlesdisplay/circlesdisplay.component';\nimport { CirclesComponent } from './circles.component';\nimport { CirclerequestsComponent } from './circlerequests/circlerequests.component';\nimport { MyrequestsComponent } from './myrequests/myrequests.component';\nimport { BusinesssettingComponent } from './businesssetting/businesssetting.component';\nimport { CompanyprofileComponent } from './companyprofile/companyprofile.component';\nimport { EditrequestComponent } from './editrequest/editrequest.component';\nimport { DeactivateGuard } from '../../core/deactivate.guard';\n\nconst routes:Routes=[{\n  path:'',\n  component:CirclesComponent,\n  children:[{\n    path:'circlesdisplay',\n    component:CirclesdisplayComponent,\n  },\n  {\n    path:'circlerequests',\n    component:CirclerequestsComponent\n  },\n  {\n    path:'myrequests',\n    component:MyrequestsComponent\n  },\n  {\n    path:'businesssetting',\n    component:BusinesssettingComponent,\n    canDeactivate : [DeactivateGuard]\n  },\n  {\n    path:'companyprofile',\n    component:CompanyprofileComponent,\n    canDeactivate : [DeactivateGuard]\n  },\n  {\n    path:'companyprofile',\n    component:CompanyprofileComponent\n  },\n  {\n    path:'editRequest',\n    component:EditrequestComponent\n  }\n]\n}]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule,\n  ],\n  declarations: []\n})\nexport class CirclesRoutingModule { }\nexport const routedComponents=[\n  CirclesComponent,\n  CirclesdisplayComponent,\n  CirclerequestsComponent,\n  MyrequestsComponent,\n  BusinesssettingComponent,\n  CompanyprofileComponent\n]\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/circles/circles-routing.module.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-form-elements',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class CirclesComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/circles/circles.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CirclesdisplayComponent } from './circlesdisplay/circlesdisplay.component';\nimport { routedComponents, CirclesRoutingModule } from './circles-routing.module';\nimport { ThemeModule } from '../../@theme/theme.module';\nimport { MatSortModule, MatDialogModule, MatFormFieldModule, MatSelectModule, MatInputModule, MatDatepickerModule, MatNativeDateModule, MatButtonModule, MatCheckboxModule, MatTableModule, MatRadioModule, MatTooltipModule, MatAutocompleteModule, MatSnackBarModule, MatPaginatorModule, MatMenuModule, MatIconModule, MatListModule, MatChipsModule, MatTabsModule } from '@angular/material';\nimport { ConnectpeopleComponent } from './connectpeople/connectpeople.component';\nimport { CirclerequestsComponent } from './circlerequests/circlerequests.component';\nimport { ConfirmrequestsComponent } from './confirmrequests/confirmrequests.component';\nimport { MyrequestsComponent } from './myrequests/myrequests.component';\nimport { BusinesssettingComponent } from './businesssetting/businesssetting.component';\nimport { CompanyprofileComponent } from './companyprofile/companyprofile.component';\nimport { MappingComponent } from './mapping/mapping.component';\nimport { EditrequestComponent } from './editrequest/editrequest.component';\nimport { DutychangesComponent } from './dutychanges/dutychanges.component';\nimport { QuillModule } from 'ngx-quill';\nimport { NewBranchService } from '../operations/new-branch/new-branch.service';\n\n@NgModule({\n  imports: [\n    ThemeModule,\n    CommonModule,\n    MatSortModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatRadioModule,\n    MatTooltipModule,\n    MatAutocompleteModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    MatMenuModule,\n    MatIconModule,\n    CirclesRoutingModule,\n    MatListModule,\n    MatChipsModule,\n    MatTabsModule,\n    QuillModule\n  ],\n  declarations: [CirclesdisplayComponent,\n    routedComponents,\n    ConnectpeopleComponent,\n    CirclerequestsComponent,\n    ConfirmrequestsComponent,\n    MyrequestsComponent,\n    BusinesssettingComponent,\n    CompanyprofileComponent,\n    MappingComponent,\n    EditrequestComponent,\n    DutychangesComponent\n  ],\n  entryComponents:[\n    ConnectpeopleComponent,\n    ConfirmrequestsComponent,\n    MappingComponent,\n    DutychangesComponent\n  ],\n  providers:\n  [\n    NewBranchService\n  ]\n})\nexport class CirclesModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/circles/circles.module.ts","module.exports = \"<div>\\n  <nb-card>\\n    <nb-card-header>\\n      Your Circles\\n    </nb-card-header>\\n    <nb-card-body>\\n\\n        <div align=\\\"center\\\">\\n            <mat-form-field class=\\\"filter-field\\\">\\n              <input matInput placeholder=\\\"Filter\\\" [(ngModel)]=\\\"searchTerm\\\" (keyup)=\\\"search($event.target.value)\\\">\\n            </mat-form-field>\\n    \\n            <button mat-icon-button><mat-icon class=\\\"filter-icon\\\">search</mat-icon></button>\\n            <button mat-icon-button (click)=\\\"clear()\\\"><mat-icon class=\\\"filter-icon\\\">highlight_off</mat-icon></button>\\n        </div>\\n\\n      <mat-table #table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n         <ng-container matColumnDef=\\\"name\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.supplierName}} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"phone\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Contact Number </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.phone}} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"alternatePhone\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Alternate Number </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.alternatePhone}} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"email\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Email </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"headOfficeCity\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header> City </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.headOfficeCity}} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"state\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header> State </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.state}} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Options\\\">\\n            <mat-header-cell *matHeaderCellDef> Options </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element ;let row\\\">\\n              <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\"><mat-icon>more_vert</mat-icon></button>\\n              <mat-menu #menu=\\\"matMenu\\\">\\n              <button mat-menu-item>Edit</button>\\n              <button mat-menu-item>Delete</button>\\n              <button mat-menu-item>Set Supplier Pricing</button>\\n              </mat-menu>\\n            </mat-cell>\\n          </ng-container>\\n\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n\\n      </mat-table>\\n      <mat-paginator [length]=\\\"length\\\"\\n                    [pageSize]=\\\"pageSize\\\"\\n                    [pageSizeOptions]=\\\"pageSizeOptions\\\"></mat-paginator>\\n      \\n    </nb-card-body>\\n  </nb-card>\\n  <!-- <div align=\\\"left\\\">\\n    People in Your Circle\\n  </div>-->\\n  <div class=\\\"col-lg-12\\\" align=\\\"right\\\">\\n    <a *ngIf=\\\"permission.addToCircle\\\" (click)=\\\"connectPeople()\\\" class=\\\"float\\\">\\n      <i style=\\\"color: ghostwhite\\\" class=\\\"fa fa-plus my-float\\\"></i>\\n    </a>\\n    \\n</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/circles/circlesdisplay/circlesdisplay.component.html\n// module id = ./src/app/pages/circles/circlesdisplay/circlesdisplay.component.html\n// module chunks = circles.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/circles/circlesdisplay/circlesdisplay.component.scss\n// module id = ./src/app/pages/circles/circlesdisplay/circlesdisplay.component.scss\n// module chunks = circles.module","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog, MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { ConnectpeopleComponent } from '../connectpeople/connectpeople.component';\nimport { CircleService } from '../circle.service';\nimport { AuthService } from '../../../core/auth.service';\nimport { User } from '../../../core/user';\nimport { SubUser } from '../../masters/sub-users/sub-user';\n\n@Component({\n  selector: 'app-circlesdisplay',\n  templateUrl: './circlesdisplay.component.html',\n  styleUrls: ['./circlesdisplay.component.scss']\n})\nexport class CirclesdisplayComponent implements OnInit {\n\n  dataSource=new MatTableDataSource;\n  displayedColumns=[\"name\",\"phone\",\"alternatePhone\",\"email\",\"headOfficeCity\",\"state\",\"Options\"]\n  users:any\n  user:User={};\n  permission:SubUser={};\n  suppliers:any[];\n  length;\n  pageSize = 10;  // set default to 10\n  pageSizeOptions = [10, 15, 25, 40];\n  searchTerm:any;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator:MatPaginator;\n  \n  constructor(private matDialog:MatDialog,\n    private circlesService:CircleService,\n    private auth:AuthService\n    ) { }\n    \n\n  ngOnInit() {\n    \n    this.auth.user.subscribe(data=>{\n      this.user=data[0]\n      this.auth.permissions.subscribe(data=>{\n        this.permission=data[0];\n        if(this.permission.manageCircle === 0) {\n          this.displayedColumns.pop();\n        }\n      })\n      this.circlesService.getCircle(this.user).subscribe(data=>{\n        this.dataSource.data=data;\n        this.length=data.length;\n      })\n    })\n  \n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n  \n  connectPeople()\n  {\n    this.matDialog.open(ConnectpeopleComponent);\n  }\n\n  search(filter:string)\n  {\n    this.dataSource.filter = filter.trim().toLowerCase();\n  }\n\n  clear()\n  {\n    this.searchTerm=\"\"\n  }\n  \n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/circles/circlesdisplay/circlesdisplay.component.ts","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n        <nb-card>\\n            <nb-card-header>Company Profile</nb-card-header>\\n            <nb-card-body>\\n                <div class=\\\"row ptb-10\\\">\\n                    <div class=\\\"col-lg-6 col-6\\\" style=\\\"text-align:right; margin:auto;\\\">\\n                        Upload Company Logo\\n                        <br>\\n                        <button (click)=\\\"profilePhoto.click()\\\" mat-raised-button color=\\\"primary\\\"> <mat-icon>cloud_upload</mat-icon>Browse</button>\\n                        <input type=\\\"file\\\" accept=\\\"images/*\\\" #profilePhoto name=\\\"companyLogo\\\" hidden (change)=\\\"uploadImage($event)\\\">\\n                    </div>\\n                    <div class=\\\"col-lg-6 col-6\\\">\\n                        <img alt=\\\"\\\" *ngIf=\\\"companyLogo!=''\\\" [src]=\\\"companyLogo\\\" height=\\\"100\\\" width=\\\"100\\\"><button mat-icon-button *ngIf=\\\"companyLogo!=''\\\" (click)=\\\"removeImage()\\\"><mat-icon>clear</mat-icon></button>\\n                    </div>\\n                </div>\\n                <div class=\\\"row ptb-10\\\">\\n                    <div class=\\\"col-lg-4 col-12\\\">\\n                        <mat-form-field>\\n                            Name\\n                            <input [(ngModel)]=\\\"companyProfile.name\\\" name=\\\"name\\\" matInput>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-lg-4 col-12\\\">                        \\n                        <mat-form-field>\\n                            Address\\n                            <textarea [(ngModel)]=\\\"companyProfile.address\\\" name=\\\"saddress\\\" matInput #newAddress></textarea>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-lg-4 col-12\\\">\\n                        <mat-form-field>\\n                            State\\n                            <input matInput [formControl]=\\\"companyProfileStateControl\\\" [matAutocomplete]=\\\"auto1\\\">\\n                            <mat-autocomplete #auto1=\\\"matAutocomplete\\\">\\n                                <mat-option *ngFor=\\\"let option of companyStateOptions | async\\\" [value]=\\\"option\\\" (onSelectionChange)=\\\"companyStateSelect(option,$event)\\\">\\n                                    {{ option }}\\n                                </mat-option>\\n                            </mat-autocomplete>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n                <div class=\\\"row ptb-10\\\">\\n                    <div class=\\\"col-lg-4 col-12\\\">\\n                        <mat-form-field>\\n                            Phone Number\\n                            <input matInput [(ngModel)]=\\\"companyProfile.phone\\\" name=\\\"phone\\\" #newPhone />\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-lg-4 col-12\\\">\\n                        <mat-form-field>\\n                            Email\\n                            <input matInput [(ngModel)]=\\\"companyProfile.email\\\" name=\\\"email\\\" #newEmail />\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-lg-4 col-12\\\">\\n                        <mat-form-field>\\n                            Alternate Phone Number\\n                            <input matInput [(ngModel)]=\\\"companyProfile.alternatePhone\\\"/>\\n                        </mat-form-field>\\n                        \\n                    </div>\\n                </div>\\n                <div class=\\\"row ptb-10\\\">\\n                    <div class=\\\"col-lg-4 col-12\\\">\\n                        <mat-form-field>\\n                            PAN\\n                            <input matInput [(ngModel)]=\\\"companyProfile.panNo\\\" name=\\\"panNo\\\" #newPAN />\\n                        </mat-form-field>\\n                        \\n                    </div>\\n                    <div class=\\\"col-lg-4 col-12\\\">\\n                        <mat-form-field>\\n                            GSTIN\\n                            <input matInput [(ngModel)]=\\\"companyProfile.gstin\\\" name=\\\"gstin\\\"  #newGSTIN />\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-lg-4 col-12\\\">\\n                        <mat-form-field>\\n                            HSN/SAC Code\\n                            <input matInput [(ngModel)]=\\\"companyProfile.hsnCode\\\" name=\\\"hsnCode\\\"  #newHSN />\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n                <div class=\\\"row ptb-10\\\">\\n                    <div class=\\\"col-lg-4 col-12\\\">\\n                        <mat-form-field>\\n                            Head Office City\\n                            <input [(ngModel)]=\\\"companyProfile.headOfficeCity\\\" name=\\\"headOfficeCity\\\" matInput #newCity />\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-lg-4 col-12\\\">\\n                        <mat-form-field>\\n                            Invoice Prefix\\n                            <input matInput [(ngModel)]=\\\"companyProfile.invoicePrefix\\\"/>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-lg-4 col-12\\\">\\n                        <mat-form-field>\\n                            Invoice Prefix (Hotel)\\n                            <input matInput [(ngModel)]=\\\"companyProfile.hotelInvoicePrefix\\\"/>\\n                        </mat-form-field>\\n                    </div>\\n                </div> \\n                <div class=\\\"row ptb-10\\\">\\n                    <div class=\\\"col-lg-4 col-12\\\">\\n                        <mat-form-field>\\n                            Invoice Prefix (Flights)\\n                            <input matInput [(ngModel)]=\\\"companyProfile.flightInvoicePrefix\\\"/>\\n                        </mat-form-field>\\n                    </div>\\n                </div>               \\n            </nb-card-body>\\n        </nb-card>\\n    </div> \\n    <div class=\\\"col-lg-12\\\">\\n        <button *ngIf=\\\"permission.editCompanyInfo\\\" mat-raised-button color=\\\"primary\\\"(click)=\\\" saveCompanyProfile()\\\">Save</button>\\n        <button mat-raised-button color=\\\"warn\\\"(click)=\\\"addBranch()\\\">Add Branch</button>\\n        <br><br>\\n    </div>\\n</div>    \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/circles/companyprofile/companyprofile.component.html\n// module id = ./src/app/pages/circles/companyprofile/companyprofile.component.html\n// module chunks = circles.module","module.exports = \".full-width {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  min-width: 100px; }\\n\\nnb-checkbox {\\n  margin-bottom: 1rem; }\\n\\n.form-inline > * {\\n  margin: 0 1.5rem 1.5rem 0; }\\n\\nnb-card.inline-form-card nb-card-body {\\n  padding-bottom: 0; }\\n\\ntd {\\n  padding-left: 15px;\\n  padding-right: 15px; }\\n\\n.col-lg-4 {\\n  margin-bottom: -15px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/circles/companyprofile/companyprofile.component.scss\n// module id = ./src/app/pages/circles/companyprofile/companyprofile.component.scss\n// module chunks = circles.module","import { Component, OnInit, HostListener } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { CompanyProfile } from './companyprofile';\nimport { AuthService } from '../../../core/auth.service';\nimport { MatDialog, MatSnackBar, MatTabGroupBase } from '@angular/material';\nimport { NewBranchComponent } from '../../operations/new-branch/new-branch.component';\nimport { CompanyprofileService } from './companyprofile.service';\nimport { Observable } from 'rxjs';\nimport { startWith, map } from 'rxjs/operators';\nimport { FileuploadService } from '../../../fileupload.service';\nimport { User } from '../../../core/user';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { SubUserService } from '../../masters/sub-users/sub-user.service';\nimport { SubUser } from '../../masters/sub-users/sub-user';\n\n\n@Component({\n  selector: 'companyprofile',\n  templateUrl: './companyprofile.component.html',\n  styleUrls: ['./companyprofile.component.scss']\n})\nexport class CompanyprofileComponent implements OnInit {\n\n  @HostListener(\"window:beforeunload\", [\"$event\"]) unloadHandler(event: Event) {\n    console.log(\"Processing beforeunload...\");\n    event.returnValue = false;\n  }\n\n  constructor(private snackBar:MatSnackBar,\n    private auth:AuthService,\n    private dialog:MatDialog,\n    private companyService: CompanyprofileService,\n    private uploadService:FileuploadService, \n    private _sanitizer:DomSanitizer, \n    private router:Router,\n    private permissionsService:SubUserService) { }\n\n  companyProfileStateControl: FormControl = new FormControl();\n  companyStateOptions: Observable<string[]>;\n  insert:boolean=true;\n  companyLogo: any='';\n  user:User={}\n  previousImgUrl:any=''\n  permission:SubUser={};\n\n  ngOnInit() {\n    this.auth.user.subscribe(data=>{\n      this.user = data[0]\n      this.permissionsService.getSubUser(this.user).subscribe(data => {\n        this.permission=data[0];\n      })\n      this.companyProfile.ownerId=data[0].ownerId;\n      this.companyService.getCompanyProfile(data[0]).subscribe(data=>{\n        if(data.length>0) {\n          this.companyProfile=data[0];         \n          this.insert=false;\n          this.companyProfileStateControl.patchValue(\n            this.companyProfile.state\n          )\n          \n          if(this.companyProfile.companyLogo!='' && this.companyProfile.companyLogo!=null)\n            this.uploadService.getFile(this.user.companyName,'profileImages',this.companyProfile.companyLogo).subscribe(data=>{\n              this.companyLogo = this._sanitizer.bypassSecurityTrustResourceUrl('data:image/jpg;base64,' \n              + data.text());\n              this.previousImgUrl = this.companyLogo;\n            })\n\n        }\n      })\n\n    })\n\n    this.companyStateOptions = this.companyProfileStateControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(val => this.filterCompanyStates(val))\n    );\n  }\n\n  filterCompanyStates(val: string): string[] {\n    return this.states.filter(option =>\n      option.toLowerCase().includes(val.toLowerCase()));\n  }\n\n  uploadImage(event) {\n    const file=event.target.files[0]\n    const reader=new FileReader();\n    reader.onload=e=>this.companyLogo=reader.result\n\n    reader.readAsDataURL(file);\n  }\n\n  saveCompanyProfile(){\n    this.companyProfile.companyLogo = this.companyProfile.name+\"_Logo.jpg\";\n    if(this.insert) {\n      this.companyService.addCompanyProfile(this.companyProfile).subscribe(data=>{\n        this.snackBar.open(\"Company Profile Updated\",null,{duration:3000})\n        this.upload(data.insertId)\n      })\n    } \n    else {\n      this.companyService.updateCompanyProfile(this.companyProfile).subscribe(data=>{\n        this.snackBar.open(\"Company Profile Updated\",null,{duration:3000})\n        this.upload(this.companyProfile.id)\n      })\n    }\n  }\n\n  companyStateSelect(option,event:any)\n  {\n    if(event.source.selected==true)\n    {\n      this.companyProfile.state=option\n    }\n  }\n\nstates=\n  [\n    'Andaman and Nicobar Islands',\n    'Andhra Pradesh',\n    'Arunachal Pradesh',\n    'Assam',\n    'Bihar',\n    'Chandigarh',\n    'Chhattisgarh',\n    'Dadra and Nagar Haveli',\n    'Delhi',\n    'Goa',\n    'Gujarat',\n    'Haryana',\n    'Himachal Pradesh',\n    'Jammu and Kashmir',\n    'Jharkhand',\n    'Karnataka',\n    'Karnatka',\n    'Kerala',\n    'Madhya Pradesh',\n    'Maharashtra',\n    'Manipur',\n    'Meghalaya',\n    'Mizoram',\n    'Nagaland',\n    'Odisha',\n    'Puducherry',\n    'Punjab',\n    'Rajasthan',\n    'Tamil Nadu',\n    'Telangana',\n    'Tripura',\n    'Uttar Pradesh',\n    'Uttarakhand',\n    'West Bengal'\n  ];\n\n  addBranch(){\n    this.router.navigate(['/pages/operations/branch'])\n  }\n\n  upload(id) {\n    if(this.companyLogo!='')\n    {\n      this.companyProfile.companyLogo = id+this.companyProfile.name+\".jpg\";\n      this.uploadService.uploadfile(this.user.companyName,'profileImages',this.companyProfile.companyLogo,this.companyLogo);\n    }\n      this.companyProfile.id=id\n      this.companyService.updateCompanyProfile(this.companyProfile).subscribe(data=>{\n        this.dialog.closeAll()\n      })\n  }\n\n  companyProfile:CompanyProfile={\n    companyLogo: '',\n    name:'',\n    address:'',\n    state:'',\n    phone:'',\n    email:'',\n    panNo:'',\n    gstin:'',\n    alternatePhone:'',\n    headOfficeCity:'',\n    invoicePrefix:'',\n    hotelInvoicePrefix:'',\n    flightInvoicePrefix:'',\n    ownerId:'',\n    hsnCode:''\n  }\n\n  removeImage()\n  {\n    this.companyLogo='';\n    this.previousImgUrl='';\n    this.companyProfile.companyLogo='';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/circles/companyprofile/companyprofile.component.ts","module.exports = \"<div>Are you sure you want to send request to {{supplierName}}?</div>\\n<div class=\\\"confirm-container\\\">\\n  <button class=\\\"confirm-button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"confirmRequest()\\\">Yes</button>\\n  <button class=\\\"confirm-button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"cancelRequest()\\\">Cancel</button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/circles/confirmrequests/confirmrequests.component.html\n// module id = ./src/app/pages/circles/confirmrequests/confirmrequests.component.html\n// module chunks = circles.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/circles/confirmrequests/confirmrequests.component.scss\n// module id = ./src/app/pages/circles/confirmrequests/confirmrequests.component.scss\n// module chunks = circles.module","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatSnackBar } from '@angular/material';\nimport { ConnectpeopleComponent } from '../connectpeople/connectpeople.component';\nimport { CircleService } from '../circle.service';\nimport { AuthService } from '../../../core/auth.service';\n\n@Component({\n  selector: 'app-confirmrequests',\n  templateUrl: './confirmrequests.component.html',\n  styleUrls: ['./confirmrequests.component.scss']\n})\nexport class ConfirmrequestsComponent implements OnInit {\nagain:boolean=false;\n  supplierName:any;\n  ownerId:any;\n  toOwnerId:any;\n  user\n  constructor(@Inject (MAT_DIALOG_DATA) public data,\n  private dialog:MatDialog,\n  private circleService:CircleService,\n  private auth:AuthService,\n  private snackBar:MatSnackBar\n  ) {\n    if(data.temp!=null)\n    {\n      this.supplierName=data.temp.name;\n      this.toOwnerId=data.temp.ownerId;\n      this.again=data.again;\n    }\n   }\n\n  ngOnInit() {\n    this.auth.user.subscribe(data=>{\n      this.user=data[0]\n    })\n  }\n  confirmRequest(){\n    var temp={\n      name:this.user.name,\n      fromOwnerId:this.user.ownerId,\n      toOwnerId:this.toOwnerId\n    }\n    if(!this.again)\n    {\n    this.circleService.sendRequest(temp).subscribe()\n    }\n    else\n    this.circleService.sendRequestAgain(temp).subscribe()\n    this.snackBar.open(\"Your Request has been to sent\",null,{duration:2000})\n    this.dialog.closeAll()\n  }\n  cancelRequest(){\n    this.dialog.closeAll()\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/circles/confirmrequests/confirmrequests.component.ts","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <nb-card>\\n      <nb-card-header>\\n        Add People\\n      </nb-card-header>\\n      <nb-card-body>\\n        <table class=\\\"table\\\">\\n          <tr>\\n            <th>Name</th>\\n            <th>Phone</th>\\n            <th>Email</th>\\n            <th>Address</th>\\n            <th>City</th>\\n            <th>&#10004; x</th>\\n          </tr>\\n          <tr *ngFor=\\\"let element of users\\\">\\n            <td>\\n              <!-- <mat-list>\\n                <mat-list-item> -->\\n                  {{element.name}}\\n                <!-- </mat-list-item>\\n              </mat-list> -->\\n            </td>\\n            <td>\\n              <!-- <mat-list>\\n                <mat-list-item> -->\\n                  {{element.phone}} <ng-container *ngIf=\\\"element.alternatephone\\\">, {{element.alternatephone}}</ng-container>\\n                <!-- </mat-list-item>\\n              </mat-list> -->\\n            </td>\\n            <td>\\n              <!-- <mat-list>\\n                <mat-list-item> -->\\n                  {{element.email}}\\n                <!-- </mat-list-item>\\n              </mat-list> -->\\n            </td>\\n            <td class=\\\"fit-address\\\">\\n              <!-- <mat-list>\\n                <mat-list-item> -->\\n                  {{element.address}}\\n                <!-- </mat-list-item>\\n              </mat-list> -->\\n            </td>\\n            <td>\\n              <!-- <mat-list>\\n                <mat-list-item> -->\\n                  {{element.headofficecity}}\\n                <!-- </mat-list-item>\\n              </mat-list> -->\\n            </td>\\n            <td *ngIf=\\\"element.status == 'Accepted'\\\">\\n              <mat-chip-list>\\n                <mat-chip style=\\\"margin-top:10px\\\" class=\\\"green-color\\\" selected>Accepted</mat-chip>\\n              </mat-chip-list>\\n            </td>\\n            <td *ngIf=\\\"element.status == 'Pending'\\\">\\n              <mat-chip-list>\\n                <mat-chip style=\\\"margin-top:10px\\\" color=\\\"warn\\\" selected>Pending</mat-chip>\\n              </mat-chip-list>\\n            </td>\\n            <td *ngIf=\\\"element.status == null\\\">\\n              <button mat-raised-button color=\\\"primary\\\" (click)=\\\"confirmRequest(element)\\\">Send Request</button>\\n            </td>\\n            <td *ngIf=\\\"element.status == 'Declined'\\\">\\n              <button mat-raised-button color=\\\"primary\\\" (click)=\\\"confirmRequestAgain(element)\\\">Send Request Again</button>\\n            </td>\\n          </tr>\\n        </table>\\n      </nb-card-body>\\n    </nb-card>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/circles/connectpeople/connectpeople.component.html\n// module id = ./src/app/pages/circles/connectpeople/connectpeople.component.html\n// module chunks = circles.module","module.exports = \".green-color {\\n  background-color: #388e3c !important;\\n  color: #fff !important; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/circles/connectpeople/connectpeople.component.scss\n// module id = ./src/app/pages/circles/connectpeople/connectpeople.component.scss\n// module chunks = circles.module","import { Component, OnInit } from '@angular/core';\nimport { CircleService } from '../circle.service';\nimport { AuthService } from '../../../core/auth.service';\nimport { User } from '../../../core/user';\nimport { MatDialog } from '@angular/material';\nimport { ConfirmrequestsComponent } from '../confirmrequests/confirmrequests.component';\n\n@Component({\n  selector: 'app-connectpeople',\n  templateUrl: './connectpeople.component.html',\n  styleUrls: ['./connectpeople.component.scss']\n})\nexport class ConnectpeopleComponent implements OnInit {\nusers:any[];\naccepted: boolean = false;\npending: boolean = false;\nrequest: boolean = false;\nuser:User={}\n  constructor(private circleService:CircleService, \n    private auth:AuthService,\n    private dialog:MatDialog\n    ) { }\n\n  ngOnInit() {\n\n    this.auth.user.subscribe(data=>{\n      this.user=data[0]\n\n    this.circleService.getUsers(this.user.ownerId).subscribe(data=>\n      {\n        data.forEach(element => {\n          console.log(element);\n          if(element.status == \"Accepted\") {\n            this.accepted = true;\n            this.pending = false;\n            this.request = false;\n          }\n          else if(element.status == \"Pending\") {\n            this.pending = true;\n            this.accepted = false;\n            this.request = false\n          }\n          else {\n            this.request = true;\n            this.accepted = false;\n            this.pending = false;\n          }\n        });\n        this.users=data;\n        \n      })\n\n    })\n  }\n\n  confirmRequest(temp){\n   var data={\n     temp:temp,\n     again:false\n   }\n    this.dialog.open(ConfirmrequestsComponent,{data:data,autoFocus:false,disableClose:true})\n  }\n  confirmRequestAgain(temp){\n    var data={\n      temp:temp,\n      again:true\n    }\n    this.dialog.open(ConfirmrequestsComponent,{data:data,autoFocus:false,disableClose:true})\n  }\n  sendRequest(row)\n  {\n    var temp={\n      name:this.user.name,\n      fromOwnerId:this.user.ownerId,\n      toOwnerId:row.ownerId\n    }\n    this.circleService.sendRequest(temp).subscribe(data=>{\n      \n    })\n  }\n  sendRequestAgain(row)\n  {\n    var temp={\n      name:this.user.name,\n      fromOwnerId:this.user.ownerId,\n      toOwnerId:row.ownerId\n    }\n    this.circleService.sendRequestAgain(temp).subscribe(data=>{\n      \n    })\n  }\n\nlog()\n{\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/circles/connectpeople/connectpeople.component.ts","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <nb-card>\\n      <nb-card-body>\\n        <h3 style=\\\"display: inline-block;\\\">Duty Details</h3>\\n        <mat-chip-list style=\\\"float: right\\\">Status:&nbsp;\\n          <mat-chip color=\\\"primary\\\" selected=\\\"true\\\">&nbsp;{{detailsT.status}}</mat-chip>\\n        </mat-chip-list>  \\n      </nb-card-body>\\n    </nb-card>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-6\\\">\\n    <nb-card>\\n      <nb-card-body>\\n        <mat-list>\\n          <mat-list-item>\\n            <b>Customer:</b> &nbsp;\\n            {{detailsT.cname}}\\n            <button mat-icon-button *ngIf=\\\"valueChanges[0].cname!=null || valueChanges[0].cname!=''\\\" matTooltip=\\\"Requested Change:{{valueChanges[0].cname}}\\\">\\n              <mat-icon style=\\\"color:red\\\">warning</mat-icon>\\n            </button>\\n          </mat-list-item>\\n          <mat-divider></mat-divider>\\n          <mat-list-item>\\n            <b>Book By:</b> &nbsp;\\n            {{detailsT.bookBy}}\\n            <button mat-icon-button *ngIf=\\\"valueChanges[0].bookBy!=null || valueChanges[0].bookBy!=''\\\" matTooltip=\\\"Requested Change:{{valueChanges[0].bookBy}}\\\">\\n              <mat-icon style=\\\"color:red\\\">warning</mat-icon>\\n            </button>\\n          </mat-list-item>\\n          <mat-divider></mat-divider>\\n          <mat-list-item>\\n            <b>ID: </b> &nbsp;\\n            {{detailsT.id}}\\n            <!-- <button mat-icon-button *ngIf=\\\"valueChanges[0].id!=null\\\" matTooltip=\\\"Requested Change:{{valueChanges[0].id}}\\\">\\n              <mat-icon style=\\\"color:red\\\">warning</mat-icon>\\n            </button> -->\\n          </mat-list-item> \\n        </mat-list>\\n      </nb-card-body>\\n    </nb-card>\\n  </div>\\n  <div class=\\\"col-lg-6\\\">\\n    <nb-card>\\n      <nb-card-body>\\n        <mat-list>\\n          <mat-list-item>\\n            <b>Start from Garage:</b>&nbsp;\\n            {{detailsT.startFromGarage}}\\n            <button mat-icon-button *ngIf=\\\"valueChanges[0].startFromGarage!=null || valueChanges[0].startFromGarage!=''\\\" matTooltip=\\\"Requested Change:{{valueChanges[0].startFromGarage}}\\\">\\n              <mat-icon style=\\\"color:red\\\">warning</mat-icon>\\n            </button>\\n          </mat-list-item>\\n          <mat-divider></mat-divider>\\n          <mat-list-item>\\n            <b>Reporting Time:</b>&nbsp;\\n            {{detailsT.reportingTime}}\\n            <button mat-icon-button *ngIf=\\\"valueChanges[0].reportingTime!=null\\\" matTooltip=\\\"Requested Change:{{valueChanges[0].reportingTime}}\\\">\\n              <mat-icon style=\\\"color:red\\\">warning</mat-icon>\\n            </button>\\n          </mat-list-item>  \\n          <mat-divider></mat-divider>\\n          <mat-list-item>\\n            <b>Start Date:</b>&nbsp;\\n            {{detailsT.startDate}}\\n            <button mat-icon-button *ngIf=\\\"valueChanges[0].startDate!=null\\\" matTooltip=\\\"Requested Change:{{valueChanges[0].startDate}}\\\">\\n              <mat-icon style=\\\"color:red\\\">warning</mat-icon>\\n            </button>\\n          </mat-list-item>  \\n        </mat-list>\\n      </nb-card-body>\\n    </nb-card>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-6\\\">\\n    <nb-card>\\n      <nb-card-body>\\n        <mat-list>\\n          <mat-list-item>\\n            <b>City:</b>&nbsp;\\n            {{detailsT.fromLoc}}\\n            <button mat-icon-button *ngIf=\\\"valueChanges[0].fromLoc!=null\\\" matTooltip=\\\"Requested Change:{{valueChanges[0].fromLoc}}\\\">\\n              <mat-icon style=\\\"color:red\\\">warning</mat-icon>\\n            </button>\\n          </mat-list-item>\\n          <mat-divider></mat-divider>\\n          <mat-list-item>\\n            <b>To Location:</b>&nbsp;\\n            {{detailsT.toLoc}}\\n            <button mat-icon-button *ngIf=\\\"valueChanges[0].toLoc!=null\\\" matTooltip=\\\"Requested Change:{{valueChanges[0].toLoc}}\\\">\\n              <mat-icon style=\\\"color:red\\\">warning</mat-icon>\\n            </button>\\n          </mat-list-item>\\n          <mat-divider></mat-divider>\\n          <mat-list-item>\\n            <b>Bill To:</b>&nbsp;\\n            {{detailsT.billTo}}\\n            <button mat-icon-button *ngIf=\\\"valueChanges[0].billTo!=null\\\" matTooltip=\\\"Requested Change:{{valueChanges[0].billTo}}\\\">\\n              <mat-icon style=\\\"color:red\\\">warning</mat-icon>\\n            </button>\\n          </mat-list-item>\\n        </mat-list>\\n      </nb-card-body>\\n    </nb-card>\\n  </div>\\n  <div class=\\\"col-lg-6\\\">\\n    <nb-card>\\n      <nb-card-body>\\n        <mat-list>\\n          <mat-list-item>\\n            <b>Duty Type:</b>&nbsp;\\n            {{detailsT.dutyType}}\\n            <button mat-icon-button *ngIf=\\\"valueChanges[0].dutyType!=null\\\" matTooltip=\\\"Requested Change:{{valueChanges[0].dutyType}}\\\">\\n              <mat-icon style=\\\"color:red\\\">warning</mat-icon>\\n            </button>\\n          </mat-list-item>\\n          <mat-divider></mat-divider>\\n          <mat-list-item>\\n            <b>Vehicle Group:</b>&nbsp;\\n            {{detailsT.vehicleGroup}}\\n            <button mat-icon-button *ngIf=\\\"valueChanges[0].vehicleGroup!=null\\\" matTooltip=\\\"Requested Change:{{valueChanges[0].vehicleGroup}}\\\">\\n              <mat-icon style=\\\"color:red\\\">warning</mat-icon>\\n            </button>\\n          </mat-list-item>\\n          <mat-divider></mat-divider>\\n          <mat-list-item>\\n            <b>Customer:</b>&nbsp;\\n            {{detailsT.cname}}\\n            <button mat-icon-button *ngIf=\\\"valueChanges[0].cname!=null\\\" matTooltip=\\\"Requested Change:{{valueChanges[0].cname}}\\\">\\n              <mat-icon style=\\\"color:red\\\">warning</mat-icon>\\n            </button>\\n          </mat-list-item>\\n        </mat-list>\\n      </nb-card-body>\\n    </nb-card>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-6\\\">\\n    <nb-card>\\n      <nb-card-body>\\n        <mat-list>\\n          <mat-list-item>\\n            <b>Booked By:</b>&nbsp;\\n            {{detailsT.bookBy}}\\n            <button mat-icon-button *ngIf=\\\"valueChanges[0].bookBy!=null\\\" matTooltip=\\\"Requested Change:{{valueChanges[0].bookBy}}\\\">\\n              <mat-icon style=\\\"color:red\\\">warning</mat-icon>\\n            </button>\\n          </mat-list-item>\\n          <mat-divider></mat-divider>\\n          <mat-list-item>\\n            <b>Reporting Address:</b>&nbsp;\\n            {{detailsT.reportingAddress}}\\n            <button mat-icon-button *ngIf=\\\"valueChanges[0].reportingAddress!=null\\\" matTooltip=\\\"Requested Change:{{valueChanges[0].reportingAddress}}\\\">\\n              <mat-icon style=\\\"color:red\\\">warning</mat-icon>\\n            </button>\\n          </mat-list-item>\\n          <mat-divider></mat-divider>\\n          <mat-list-item>\\n            <b>Drop Address:</b> &nbsp;\\n            {{detailsT.dropAddress}}\\n            <button mat-icon-button *ngIf=\\\"valueChanges[0].dropAddress!=null\\\" matTooltip=\\\"Requested Change:{{valueChanges[0].dropAddress}}\\\">\\n              <mat-icon style=\\\"color:red\\\">warning</mat-icon>\\n            </button>\\n          </mat-list-item>\\n        </mat-list>\\n      </nb-card-body>\\n    </nb-card>\\n  </div>\\n  <div class=\\\"col-lg-6\\\">\\n    <nb-card>\\n      <nb-card-body>\\n        <mat-list>\\n          <mat-list-item>\\n            <b>Price:</b>&nbsp;\\n            {{detailsT.price}}\\n            <button mat-icon-button *ngIf=\\\"valueChanges[0].price!=null\\\" matTooltip=\\\"Requested Change:{{valueChanges[0].price}}\\\">\\n              <mat-icon style=\\\"color:red\\\">warning</mat-icon>\\n            </button>\\n          </mat-list-item>\\n          <mat-divider></mat-divider>\\n          <mat-list-item>\\n            <b>Passenger:</b>&nbsp;\\n            {{detailsT.passenger}}\\n            <button mat-icon-button *ngIf=\\\"valueChanges[0].passenger!=null\\\" matTooltip=\\\"Requested Change:{{valueChanges[0].passenger}}\\\">\\n              <mat-icon style=\\\"color:red\\\">warning</mat-icon>\\n            </button>\\n          </mat-list-item>\\n          <mat-divider></mat-divider>\\n          <mat-list-item>\\n            <b>Remarks:</b>&nbsp; \\n            {{detailsT.remarks}}\\n            <button mat-icon-button *ngIf=\\\"valueChanges[0].remarks!=null\\\" matTooltip=\\\"Requested Change:{{valueChanges[0].remarks}}\\\">\\n              <mat-icon style=\\\"color:red\\\">warning</mat-icon>\\n            </button>\\n          </mat-list-item>\\n        </mat-list>\\n      </nb-card-body>\\n    </nb-card>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <nb-card>\\n      <nb-card-body>\\n        <b>Operator Notes:</b>{{detailsT.operatorNotes}}\\n      </nb-card-body>\\n    </nb-card>\\n  </div>\\n</div>\\n<div class=\\\"row ptb-10\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <button mat-raised-button color=\\\"primary\\\" *ngIf=\\\"valueChanges[0]!=null\\\" (click)=\\\"save()\\\">Save</button>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"closeDialog()\\\">Close</button>\\n  </div>\\n</div>\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/circles/dutychanges/dutychanges.component.html\n// module id = ./src/app/pages/circles/dutychanges/dutychanges.component.html\n// module chunks = circles.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/circles/dutychanges/dutychanges.component.scss\n// module id = ./src/app/pages/circles/dutychanges/dutychanges.component.scss\n// module chunks = circles.module","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material';\nimport { Duty } from '../../duties/duty';\nimport { DutiesService } from '../../duties/duties.service';\n\n@Component({\n  selector: 'dutychanges',\n  templateUrl: './dutychanges.component.html',\n  styleUrls: ['./dutychanges.component.scss']\n})\nexport class DutychangesComponent implements OnInit {\n\n  detailsT:Duty={}\n  valueChanges:any[]\n  constructor(@Inject (MAT_DIALOG_DATA) public data,private dutiesService:DutiesService,private dialog:MatDialog) {\n    if(data){\n      this.detailsT=data.row\n      // this.valueChanges=data.valueChanges\n    }\n   }\n\n  ngOnInit() {\n\n    this.dutiesService.getValueChanges(this.detailsT).subscribe(data=>{\n      console.log(data)\n      this.valueChanges=data\n    })\n  }\n  closeDialog(){\n    this.dialog.closeAll()\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/circles/dutychanges/dutychanges.component.ts","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\" >\\n      <nb-card>\\n        <nb-card-header>\\n            Duties Edit Requests\\n         </nb-card-header>\\n        <nb-card-body>\\n            <div align=\\\"center\\\">\\n                <mat-form-field class=\\\"filter-field\\\">\\n                  <input matInput   placeholder=\\\"Filter\\\"   [(ngModel)]=\\\"searchTerm\\\" (keyup)=\\\"search($event.target.value)\\\">\\n                </mat-form-field>\\n        \\n                <button mat-icon-button><mat-icon class=\\\"filter-icon\\\">search</mat-icon></button>\\n                <button mat-icon-button (click)=\\\"clear()\\\"><mat-icon class=\\\"filter-icon\\\">highlight_off</mat-icon></button>\\n              </div>\\n              <mat-table  [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"name\\\" matSortDirection=\\\"asc\\\" matSortDisableClear>\\n    \\n                         <!-- Date Column -->\\n        <ng-container matColumnDef=\\\"startDate\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> Date</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.startDate}} </mat-cell>\\n          </ng-container>\\n        \\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"cname\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> Customer </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.cname}} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Booked By Column -->\\n          <ng-container matColumnDef=\\\"bookBy\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> Booked by </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"  [matTooltip]=\\\"element.bookByNo\\\"> {{element.bookBy}} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Symbol Column -->\\n          <ng-container matColumnDef=\\\"passenger\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> Passenger</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\" [matTooltip]=\\\"element.passengerNo\\\"> {{element.passenger}} </mat-cell>\\n            \\n          </ng-container>\\n\\n          <!-- Symbol Column -->\\n          <ng-container matColumnDef=\\\"driver\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> Driver </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.driver}} </mat-cell>\\n            \\n          </ng-container>\\n\\n          <!-- Symbol Column -->\\n          <ng-container matColumnDef=\\\"vehicleGroup\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> Vehicle Group</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.vehicleGroup}} </mat-cell>\\n            \\n          </ng-container>\\n\\n          <!-- Symbol Column -->\\n          <ng-container matColumnDef=\\\"dutyType\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header> Duty Type</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let element\\\"> {{element.dutyType}} </mat-cell>\\n              \\n            </ng-container>\\n\\n          <!-- Symbol Column -->\\n          <ng-container matColumnDef=\\\"reportingAddress\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header>Short Reporting Address</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let element\\\" [matTooltip]=\\\"element.reportingAddress\\\"> {{element.shortReportingAddress}} </mat-cell>\\n              \\n            </ng-container>  \\n\\n            <!-- Symbol Column -->\\n          <ng-container matColumnDef=\\\"dropAddress\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header> Drop Address</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let element\\\"> {{element.dropAddress}} </mat-cell>\\n              \\n            </ng-container>\\n\\n            <!-- Symbol Column -->\\n          <ng-container matColumnDef=\\\"reportingTime\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header> Reporting Time</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let element\\\"> {{element.reportingTime}} </mat-cell>\\n              \\n            </ng-container>\\n          \\n            <!-- Symbol Column -->\\n          <ng-container matColumnDef=\\\"remarks\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header> Remarks</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let element\\\"> {{element.remarks}} </mat-cell>\\n              \\n            </ng-container>\\n\\n            <!-- Symbol Column -->\\n          <ng-container matColumnDef=\\\"status\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header> Status</mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let element\\\">\\n                <mat-chip-list>\\n                  <mat-chip color=\\\"primary\\\" selected=\\\"true\\\">{{element.status}}</mat-chip>\\n                </mat-chip-list> \\n              </mat-cell>\\n              \\n            </ng-container>\\n      \\n                  <ng-container matColumnDef=\\\"Options\\\">\\n                    <mat-header-cell *matHeaderCellDef> Options</mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let element ;let row\\\">\\n                      <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\"><mat-icon>more_vert</mat-icon></button>\\n                      <mat-menu #menu=\\\"matMenu\\\">\\n                      <button mat-menu-item (click)=\\\"selectRow(row)\\\">View</button>\\n                      <button (click)=\\\"deleteCust(row)\\\" mat-menu-item>Delete</button>\\n                      </mat-menu>\\n                    </mat-cell>\\n                  </ng-container>\\n            \\n                <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n                <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n              </mat-table>\\n              <mat-paginator [length]=\\\"length\\\"\\n              [pageSize]=\\\"pageSize\\\"\\n              [pageSizeOptions]=\\\"pageSizeOptions\\\"></mat-paginator>\\n          \\n    </nb-card-body>\\n  </nb-card>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/circles/editrequest/editrequest.component.html\n// module id = ./src/app/pages/circles/editrequest/editrequest.component.html\n// module chunks = circles.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/circles/editrequest/editrequest.component.scss\n// module id = ./src/app/pages/circles/editrequest/editrequest.component.scss\n// module chunks = circles.module","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource, MatDialog } from '@angular/material';\nimport { AuthService } from '../../../core/auth.service';\nimport { DutiesService } from '../../duties/duties.service';\nimport { User } from '../../../core/user';\nimport { DetailsComponent } from '../../duties/details/details.component';\nimport { DutychangesComponent } from '../dutychanges/dutychanges.component';\n\n@Component({\n  selector: 'editrequest',\n  templateUrl: './editrequest.component.html',\n  styleUrls: ['./editrequest.component.scss']\n})\nexport class EditrequestComponent implements OnInit {\n\n  length;\n  pageSize = 10; \n\n  pageSizeOptions = [10, 15, 25, 40];\n dataSource=new MatTableDataSource();\n searchTerm:any;\n clear:any;\n\n  displayedColumns = ['startDate','cname', 'bookBy', 'passenger','driver','dutyType','vehicleGroup',\n 'reportingAddress','dropAddress','reportingTime','remarks','status','Options'];\n\n user:User={};\n valueChanges:any;\n\n  constructor(private auth:AuthService,private dutyService:DutiesService,private dialog:MatDialog) { }\n\n  ngOnInit() {\n    this.auth.user.subscribe(data=>{\n      this.user=data[0]\n      this.dutyService.getRequestUpdateDuties(this.user).subscribe(data=>{\n        this.dataSource=data\n      })\n    })\n  }\n  selectRow(row){\n    this.dialog.open(DutychangesComponent,{autoFocus:false,disableClose:true,\n      data:{\n        row,\n        valueChanges:this.valueChanges\n      }})\n  }\n  search(filterValue:string){\n    this.dataSource.filter=filterValue.trim().toLowerCase();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/circles/editrequest/editrequest.component.ts","module.exports = \"\\n<nb-card style=\\\"min-width:65vw;\\\">\\n  <nb-card-header>\\n    Incoming Request\\n  </nb-card-header>\\n  <nb-card-body class=\\\"no-overflow\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-6\\\">\\n        <div class=\\\"mapping\\\">\\n          <tr>\\n            <td>\\n              <b>Incoming Duty Type</b>\\n            </td>\\n          </tr>\\n          <tr>\\n            Name:{{incomingDuty.dutyType}}\\n          </tr>\\n          <tr>\\n            Duty Type:{{supplierDutyType.dType}}\\n            </tr>\\n          <tr>\\n            Max Hours:{{supplierDutyType.maxHrs}}\\n          </tr>\\n          <tr>\\n            Max Kms:{{supplierDutyType.maxKms}}\\n          </tr>\\n          <tr>\\n            Max Days:{{supplierDutyType.maxDays}}\\n          </tr>\\n        </div>\\n      \\n        <mat-divider></mat-divider>\\n\\n        <div class=\\\"mapping\\\">\\n          <tr>\\n            <b>Incoming Vehicle Group</b>\\n          </tr>\\n          <tr>\\n            Vehicle Group:{{incomingDuty.vehicleGroup}}\\n          </tr>\\n        </div>\\n        \\n      </div>\\n\\n      <mat-divider [vertical]=\\\"true\\\"></mat-divider>\\n\\n      <div class=\\\"col-lg-5\\\">\\n        <div class=\\\"mapping\\\">\\n          <tr>\\n            <b>Select Duty Type</b>\\n          </tr>\\n          <tr>\\n            <td>\\n              <mat-form-field>\\n                <input placeholder=\\\"Pick one\\\" matInput [formControl]=\\\"dutyTypeCtrl\\\"  [matAutocomplete]=\\\"autoDT\\\">\\n                <mat-autocomplete #autoDT=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let option of dutyType | async\\\" [value]=\\\"option.name\\\" (onSelectionChange)=\\\"setDutyType(option,$event)\\\">\\n                    {{ option.name }}\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </td>\\n            <td>\\n              <p *ngIf=\\\"errorMatch==false\\\" style=\\\"color:red; margin-left: 5px;\\\"><mat-icon style=\\\"color:red\\\">warning</mat-icon>Current Duty Type is not compatiable</p>\\n            </td>\\n          </tr>\\n          <tr>\\n            <b>Selected Duty Type</b>\\n          </tr>\\n          <tr>\\n            Max Hours:{{selectedDutyType.maxHrs}}\\n          </tr>\\n          <tr>\\n            Max Kms:{{selectedDutyType.maxKms}}\\n          </tr>\\n          <tr>\\n            Max Days:{{selectedDutyType.maxDays}}\\n          </tr>\\n        </div>\\n      \\n        <mat-divider></mat-divider>\\n\\n        <div class=\\\"mapping\\\">\\n          <tr>\\n            <b>Select vehicle group</b>\\n          </tr>\\n          <tr>\\n            <mat-form-field>\\n              <input placeholder=\\\"Pick one\\\" matInput [formControl]=\\\"vehicleGroupCtrl\\\"  [matAutocomplete]=\\\"autoVG\\\">\\n              <mat-autocomplete #autoVG=\\\"matAutocomplete\\\">\\n                <mat-option *ngFor=\\\"let option of vehicleGroup | async\\\" [value]=\\\"option.name\\\" (onSelectionChange)=\\\"setVehicleGroup(option,$event)\\\">\\n                  {{ option.name }}\\n                </mat-option>\\n              </mat-autocomplete>\\n            </mat-form-field>\\n          </tr>\\n        </div>\\n      </div>\\n    </div>\\n  </nb-card-body>\\n</nb-card>\\n\\n<button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"errorMatch==false\\\" (click)=\\\"confirmRequest()\\\">Confirm</button>\\n<button mat-raised-button color=\\\"warn\\\" (click)=\\\"exit()\\\">Exit</button>\\n\\n\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/circles/mapping/mapping.component.html\n// module id = ./src/app/pages/circles/mapping/mapping.component.html\n// module chunks = circles.module","module.exports = \".mapping {\\n  padding: 10px; }\\n\\n.no-overflow {\\n  overflow: hidden !important; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/circles/mapping/mapping.component.scss\n// module id = ./src/app/pages/circles/mapping/mapping.component.scss\n// module chunks = circles.module","import { Component, OnInit, Inject, HostListener } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatSnackBar } from '@angular/material';\nimport { DutyType } from '../../masters/dutytype/duty-type';\nimport { DutyTypeService } from '../../masters/dutytype/duty-type.service';\nimport { AuthService } from '../../../core/auth.service';\nimport { FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { startWith,map } from 'rxjs/operators';\nimport { VehicleGroupsComponent, VehicleGroup } from '../../masters/vehiclegroups/vehiclegroups.component';\n\n@Component({\n  selector: 'mapping',\n  templateUrl: './mapping.component.html',\n  styleUrls: ['./mapping.component.scss']\n})\nexport class MappingComponent implements OnInit {\n\n  @HostListener(\"window:beforeunload\", [\"$event\"]) unloadHandler(event: Event) {\n    console.log(\"Processing beforeunload...\");\n    event.returnValue = false;\n  }\n\n  incomingDuty:any={};\n  dutyTypes:DutyType[]=[];\n  user:any;\n  dutyType:any;\n  vehicleGroups:VehicleGroup[];\n  vehicleGroup:any;\n  vehicleGroupCtrl: FormControl = new FormControl();\n  dutyTypeCtrl:FormControl = new FormControl();\n  selectedDutyType:DutyType={};\n  selectedVehicleGroup:VehicleGroup={}\n  supplierDutyType:DutyType={};\n  errorMatch:boolean=false\n  constructor(private dutyTypeSerice:DutyTypeService,\n    private userService:AuthService,\n    public dialogRef: MatDialogRef<MappingComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dutytypeService:DutyTypeService,\n    private vehiclegroupsService:VehicleGroupsComponent,\n    private snackbar:MatSnackBar,\n    private fb:FormBuilder\n    ) { \n    console.log(data);\n    this.incomingDuty=data.duty;\n    \n  }\n\n  ngOnInit() {\n    this.userService.user.subscribe(data=>{\n      this.user=data[0];\n      this.dutytypeService.getDutyType(this.user).subscribe(data=>{\n        console.log(data)\n        if(data.length==0)\n      {\n        this.snackbar.open(\"Please register some dutytypes\",\"X\",{duration:3000});\n        //this.matDialogRef.close();\n      }\n        this.dutyTypes=data;\n        this.dutyType=this.dutyTypeCtrl.valueChanges\n        .pipe(\n          startWith(''),\n          map(val=>this.filterDutyType(val))\n        )\n      });\n      this.vehiclegroupsService.getvehicleGroup(this.user).subscribe(data=>{\n        if(data.length==0)\n        {\n            this.snackbar.open(\"Please register some vehicle groups\",\"X\",{duration:3000});\n          //this.matDialogRef.close();\n        }\n          this.vehicleGroups=data;\n          this.vehicleGroup=this.vehicleGroupCtrl.valueChanges\n          .pipe(\n            startWith(''),\n            map(val=>this.filterVehicleGroup(val))\n          );\n        });\n    })\n    this.incomingDutyType()\n  }\n  incomingDutyType(){\n    this.dutyTypeSerice.getDutyTypeofSupplier(this.incomingDuty).subscribe(data=>{\n      this.supplierDutyType=data[0]\n      console.log(this.supplierDutyType)\n    })\n  }\n  checkDutyType(){\n    if(this.selectedDutyType.maxHrs==this.supplierDutyType.maxHrs){\n      this.errorMatch=true\n    }\n  }\n  setDutyType(temp:any,event:any)\n  {\n    console.log(event)\n    if(event.source.selected==true)\n    {\n      console.log(temp)\n      this.selectedDutyType=temp\n      this.errorMatch=false\n    }\n    else if(event.source.selected==false){\n      this.errorMatch=false\n    }\n    this.checkDutyType()\n  }\n  setVehicleGroup(temp:any,event:any)\n  {\n    if(event.source.selected==true)\n    {\n      this.selectedVehicleGroup=temp\n    }\n  }\n  filterVehicleGroup(val:string){\n    \n    return this.vehicleGroups.filter(option=>\n      option.name.toLowerCase().includes(val.toLowerCase())\n      );\n  }\n  filterDutyType(val:string){\n    return this.dutyTypes.filter(option=>\n      option.name.toLowerCase().includes(val.toLowerCase()))\n  }\n  confirmRequest(){\n    var temp={\n      dutyType:this.selectedDutyType,\n      vehicleGroup:this.selectedVehicleGroup,\n      confirm:'yes'\n    }\n    this.dialogRef.close(temp)\n  }\n  exit(){\n    this.dialogRef.close()\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/circles/mapping/mapping.component.ts","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <nb-card>\\n      <nb-card-header>My Requests</nb-card-header>\\n      <nb-card-body>\\n        <mat-tab-group mat-stretch-tabs>\\n          <mat-tab label=\\\"Received\\\">\\n            <div align=\\\"center\\\">\\n        \\n              <mat-form-field class=\\\"filter-field\\\">\\n                <input matInput  placeholder=\\\"Filter\\\"  [(ngModel)]=\\\"searchTermReceived\\\" (keyup)=\\\"searchReceived($event.target.value)\\\">\\n              </mat-form-field>\\n\\n              <!-- <mat-form-field class=\\\"filter-date\\\">\\n                <input matInput [(ngModel)]=\\\"filterReceivedStart\\\" [matDatepicker]=\\\"pickerReceivedStart\\\" (click)=\\\"pickerReceivedStart.open()\\\" readonly placeholder=\\\"From\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"pickerReceivedStart\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #pickerReceivedStart></mat-datepicker>\\n              </mat-form-field>            \\n                      \\n              <mat-form-field class=\\\"filter-date\\\">\\n                <input matInput [(ngModel)]=\\\"filterReceivedEnd\\\" [matDatepicker]=\\\"pickerReceivedEnd\\\" (click)=\\\"pickerReceivedEnd.open()\\\" readonly placeholder=\\\"To\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"pickerReceivedEnd\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #pickerReceivedEnd></mat-datepicker>\\n              </mat-form-field> -->\\n            \\n              <button mat-icon-button><mat-icon class=\\\"filter-icon\\\">search</mat-icon></button>                                                              \\n              <button matTooltip=\\\"Clear All\\\" mat-icon-button (click)=\\\"clearFilter()\\\"><mat-icon class=\\\"filter-icon\\\">highlight_off</mat-icon></button>              \\n\\n            </div>\\n                    \\n            <mat-table [dataSource]=\\\"dataSourceReceived\\\" #sort1='matSort' matSort>\\n      \\n              <!-- Date Column -->\\n              <ng-container matColumnDef=\\\"startDate\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Date</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.startDate | date: 'dd-MM-yyyy'}} </mat-cell>\\n              </ng-container>\\n            \\n              <!-- Name Column -->\\n              <ng-container matColumnDef=\\\"cname\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Customer </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.ownerName}} </mat-cell>\\n              </ng-container>\\n      \\n              <!-- Booked By Column -->\\n              <ng-container matColumnDef=\\\"bookBy\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Booked by </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.bookBy}} </mat-cell>\\n              </ng-container>\\n      \\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"passenger\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Passenger</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.passenger}} </mat-cell>                \\n              </ng-container>\\n      \\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"driver\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Driver </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.driver}} </mat-cell>                \\n              </ng-container>\\n      \\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"vehicleGroup\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Vehicle Group</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.vehicleGroup}} </mat-cell>                \\n              </ng-container>\\n      \\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"dutyType\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Duty Type</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.dutyType}} </mat-cell>                \\n              </ng-container>\\n      \\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"reportingAddress\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Reporting Address</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\" [matTooltip]=\\\"element.reportingAddress\\\"> {{element.shortReportingAddress}} </mat-cell>                \\n              </ng-container>  \\n            \\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"dropAddress\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Drop Address</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\" [matTooltip]=\\\"element.dropAddress\\\"> {{element.dropAddress}} </mat-cell>                \\n              </ng-container>\\n            \\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"reportingTime\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Reporting Time</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.reportingTime}} </mat-cell>                      \\n              </ng-container>\\n                  \\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"remarks\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Remarks</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.remarks}} </mat-cell>                \\n              </ng-container>\\n        \\n              <!-- Symbol Column -->\\n              <!-- <ng-container matColumnDef=\\\"requestsFrom\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Requests From</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\">\\n                  <mat-chip-list>\\n                    <mat-chip color=\\\"primary\\\" selected=\\\"true\\\">{{element.requestsFrom}}</mat-chip>\\n                  </mat-chip-list> \\n                </mat-cell>                \\n              </ng-container> -->\\n  \\n              <ng-container matColumnDef=\\\"Options\\\">\\n                <mat-header-cell *matHeaderCellDef> Options</mat-header-cell>\\n                <mat-cell style=\\\"vertical-align: middle\\\" *matCellDef=\\\"let element ;let row\\\">\\n                  <button *ngIf=\\\"element.requestStatus=='Requested'\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"acceptRequest(row)\\\">Accept</button>\\n                  <button style=\\\"padding-left:5px\\\" *ngIf=\\\"element.requestStatus=='Requested'\\\"  mat-icon-button color=\\\"warn\\\" (click)=\\\"declineRequest(row)\\\">Decline</button>\\n                  <div *ngIf=\\\"element.requestStatus=='Accepted'\\\"><mat-icon [matTooltip]=\\\"element.log\\\">done</mat-icon></div>\\n                  <div *ngIf=\\\"element.requestStatus=='Declined'\\\"><mat-icon [matTooltip]=\\\"element.log\\\">clear</mat-icon></div>\\n                </mat-cell>\\n              </ng-container>\\n        \\n              <mat-header-row *matHeaderRowDef=\\\"displayedColumnsReceived\\\"></mat-header-row>\\n              <mat-row [ngStyle]=\\\"{'background-color':(row.startDate===today)?'#e0e0e0':'white'}\\\" *matRowDef=\\\"let row; columns: displayedColumnsReceived;\\\"></mat-row>\\n            </mat-table>\\n            <mat-paginator #paginator1 [length]=\\\"lengthReceived\\\"\\n              [pageSize]=\\\"pageSizeReceived\\\"\\n              [pageSizeOptions]=\\\"pageSizeOptionsReceived\\\"></mat-paginator>\\n          </mat-tab>\\n          <mat-tab label=\\\"Sent\\\">\\n            <div align=\\\"center\\\">\\n  \\n              <mat-form-field class=\\\"filter-field\\\">\\n                <input matInput  placeholder=\\\"Filter\\\"  [(ngModel)]=\\\"searchTermSent\\\" (keyup)=\\\"searchSent($event.target.value)\\\">\\n              </mat-form-field>\\n\\n              <!-- <mat-form-field class=\\\"filter-date\\\">\\n                <input matInput [(ngModel)]=\\\"filterSentStart\\\" [matDatepicker]=\\\"pickerSentStart\\\" (click)=\\\"pickerSentStart.open()\\\" readonly placeholder=\\\"From\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"pickerSentStart\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #pickerSentStart></mat-datepicker>\\n              </mat-form-field>            \\n                      \\n              <mat-form-field class=\\\"filter-date\\\">\\n                <input matInput [(ngModel)]=\\\"filterSentEnd\\\" [matDatepicker]=\\\"pickerSentEnd\\\" (click)=\\\"pickerSentEnd.open()\\\" readonly placeholder=\\\"To\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"pickerSentEnd\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #pickerSentEnd></mat-datepicker>\\n              </mat-form-field> -->\\n            \\n              <button mat-icon-button><mat-icon class=\\\"filter-icon\\\">search</mat-icon></button>                                                              \\n              <button matTooltip=\\\"Clear All\\\" mat-icon-button (click)=\\\"clearFilter()\\\"><mat-icon class=\\\"filter-icon\\\">highlight_off</mat-icon></button>\\n\\n            </div>\\n              \\n            <mat-table [dataSource]=\\\"dataSourceSent\\\" #sort2='matSort' matSort>\\n\\n                <!-- Date Column -->\\n              <ng-container matColumnDef=\\\"supplierName\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Supplier Name</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.supplierName}} </mat-cell>\\n              </ng-container>\\n      \\n                <!-- Date Column -->\\n              <ng-container matColumnDef=\\\"startDate\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Date</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.startDate | date: 'dd-MM-yyyy'}} </mat-cell>\\n              </ng-container>\\n              \\n                <!-- Name Column -->\\n              <ng-container matColumnDef=\\\"cname\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Customer </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.cname}} </mat-cell>\\n              </ng-container>\\n      \\n              <!-- Booked By Column -->\\n              <ng-container matColumnDef=\\\"bookBy\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Booked by </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.bookBy}} </mat-cell>\\n              </ng-container>\\n      \\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"passenger\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Passenger</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.passenger}} </mat-cell>                \\n              </ng-container>\\n      \\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"driver\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Driver </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.driver}} </mat-cell>                \\n              </ng-container>\\n      \\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"vehicleGroup\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Vehicle Group</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.vehicleGroup}} </mat-cell>                \\n              </ng-container>\\n      \\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"dutyType\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Duty Type</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.dutyType}} </mat-cell>                \\n              </ng-container>\\n      \\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"reportingAddress\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Reporting Address</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\" [matTooltip]=\\\"element.reportingAddress\\\"> {{element.shortReportingAddress}} </mat-cell>                \\n              </ng-container>  \\n      \\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"dropAddress\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Drop Address</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\" [matTooltip]=\\\"element.dropAddress\\\"> {{element.dropAddress}} </mat-cell>                \\n              </ng-container>\\n      \\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"reportingTime\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Reporting Time</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.reportingTime}} </mat-cell>                \\n              </ng-container>\\n                \\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"remarks\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Remarks</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.remarks}} </mat-cell>                \\n              </ng-container>\\n      \\n              <!-- Symbol Column -->\\n              <ng-container matColumnDef=\\\"status\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Status</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\">\\n                  <mat-chip-list>\\n                    <mat-chip color=\\\"primary\\\" selected=\\\"true\\\">{{element.status}}</mat-chip>\\n                  </mat-chip-list> \\n                </mat-cell>                    \\n              </ng-container>\\n      \\n              <ng-container matColumnDef=\\\"Options\\\">\\n                <mat-header-cell *matHeaderCellDef> Options</mat-header-cell>\\n                <mat-cell style=\\\"vertical-align: middle\\\" *matCellDef=\\\"let element ;let row\\\">\\n\\n                </mat-cell>\\n              </ng-container>\\n      \\n              <mat-header-row *matHeaderRowDef=\\\"displayedColumnsSent\\\"></mat-header-row>\\n              <mat-row [ngStyle]=\\\"{'background-color':(row.startDate===today)?'#e0e0e0':'white'}\\\" *matRowDef=\\\"let row; columns: displayedColumnsSent;\\\"></mat-row>\\n\\n            </mat-table>\\n            <mat-paginator #paginator2 [length]=\\\"lengthSent\\\"\\n              [pageSize]=\\\"pageSizeSent\\\"\\n              [pageSizeOptions]=\\\"pageSizeOptionsSent\\\"></mat-paginator>\\n          </mat-tab>\\n        </mat-tab-group>\\n      </nb-card-body>\\n    </nb-card>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/circles/myrequests/myrequests.component.html\n// module id = ./src/app/pages/circles/myrequests/myrequests.component.html\n// module chunks = circles.module","module.exports = \".mat-column-dropAddress {\\n  max-width: 100px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap; }\\n\\n.mat-cell {\\n  padding: 10px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/circles/myrequests/myrequests.component.scss\n// module id = ./src/app/pages/circles/myrequests/myrequests.component.scss\n// module chunks = circles.module","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatSort, MatPaginator, MatDialog } from '@angular/material';\nimport { CircleService } from '../circle.service';\nimport { AuthService } from '../../../core/auth.service';\nimport { User } from '../../../core/user';\nimport * as moment from 'moment';\nimport { Observable } from 'rxjs';\nimport { MappingComponent } from '../mapping/mapping.component';\nimport { SubUser } from '../../masters/sub-users/sub-user';\n\n@Component({\n  selector: 'app-myrequests',\n  templateUrl: './myrequests.component.html',\n  styleUrls: ['./myrequests.component.scss']\n})\nexport class MyrequestsComponent implements OnInit {\n\n  lengthReceived;\n  pageSizeReceived = 10;  // set default to 10\n  pageSizeOptionsReceived = [10, 15, 25, 40];\n\n  lengthSent;\n  pageSizeSent = 10;  // set default to 10\n  pageSizeOptionsSent = [10, 15, 25, 40];\n\n  dataSourceReceived=new MatTableDataSource<any>()\n  dataSourceSent=new MatTableDataSource<any>()\n  searchTermReceived:string='';\n  searchTermSent:string='';\n\n  displayedColumnsReceived = ['startDate','cname', 'bookBy', 'passenger','driver','dutyType','reportingAddress','dropAddress','reportingTime','remarks','Options'];\n\n  displayedColumnsSent = ['supplierName','startDate','cname', 'bookBy', 'passenger','driver','dutyType','reportingAddress','dropAddress','reportingTime','remarks','status','Options'];\n  \n  user:User={};\n  permission:SubUser={};\n  receivedArray:any[]=[];\n  \n  @ViewChild('sort1') sort1: MatSort;\n  @ViewChild('sort2') sort2: MatSort;\n  @ViewChild(MatPaginator) paginator1:MatPaginator;\n  @ViewChild(MatPaginator) paginator2:MatPaginator;\n  constructor(private circleService:CircleService, private auth:AuthService,private dialog:MatDialog) { }\n\n  ngOnInit() {\n\n    this.auth.user.subscribe(data=>\n    {\n        this.user=data[0]\n        this.auth.permissions.subscribe(data=>{\n          this.permission=data[0];\n          if(this.permission.acceptDeclineDutyRequests === 0) {\n            this.displayedColumnsReceived.pop();\n          }\n        })\n        this.circleService.getreceivedDuty(this.user).subscribe(data=>{\n          console.log(\"Received\");\n          console.log(data);\n          this.receivedArray=data;\n          this.dataSourceReceived.data=this.receivedArray;\n          this.lengthReceived=data.length;\n        })\n        this.circleService.getSentDuty(this.user).subscribe(data=>{\n          console.log(\"Sent\");\n          console.log(data);\n          this.dataSourceSent.data=data;\n          this.lengthSent=this.dataSourceSent.data.length;\n        })\n    })\n\n    this.dataSourceReceived.paginator=this.paginator1;\n    this.dataSourceSent.paginator=this.paginator2;\n    this.dataSourceReceived.sort=this.sort1;\n    this.dataSourceSent.sort=this.sort2;\n    \n  }\n\n  acceptRequest(row)\n  {\n    \n    console.log(row)\n    this.dialog.open(MappingComponent,{data:{duty:row},autoFocus:false,disableClose:true}).afterClosed().subscribe(data=>{\n      if(data.confirm=='yes'){\n        var date=moment().format(\"DD/MM/YYYY, hh:mm:ss a\");\n        var userName=this.user.name;\n        var log=\"Accepted by \"+userName+\" on \"+date;\n\n        var temp={\n          id:row.dutyId,\n          log:log,\n          ownerId:this.user.ownerId,\n          companyName:row.ownerName, \n          bookBy:this.user.name, //maybe wrong\n          dutyType:data.dutyType.name,\n          dutyTypeId:data.dutyType.id,\n          vehicleGroup:data.vehicleGroup.name,\n          vehicleGroupId:data.vehicleGroup.id,\n         notificationOwnerId:row.ownerId,\n         notificationCompanyName:this.user.companyName\n           }\n\n      this.circleService.acceptDuty(temp).subscribe(data=>{\n        var i=this.receivedArray.indexOf(row);\n        row.log=log;\n        row.requestStatus=\"Accepted\";\n        this.receivedArray.splice(i,1,row);\n        this.dataSourceReceived.data=this.receivedArray\n      })\n      console.log(data)\n      console.log(\"Yo\")\n     }\n   });\n  }\n\n  declineRequest(row)\n  {\n    var date=moment().format(\"DD/MM/YYYY, hh:mm:ss a\");\n    var userName=this.user.name;\n    var log=\"Declined by \"+userName+\" on \"+date;\n\n\n    var temp={\n      id:row.dutyId,\n      log:log\n    }\n    this.circleService.declineDuty(temp).subscribe(data=>{\n      var i=this.receivedArray.indexOf(row);\n      row.log=log;\n      row.requestStatus=\"Declined\";\n      this.receivedArray.splice(i,1,row);\n      this.dataSourceReceived.data=this.receivedArray\n    })\n  }\n\n  clearFilter(){\n    this.searchTermReceived=\"\"\n    this.searchTermSent=\"\"\n    this.dataSourceReceived.filter=\"\"\n    this.dataSourceSent.filter=\"\"\n  }\n\n  searchReceived(filterValue:string){\n    this.dataSourceReceived.filter=filterValue.trim().toLowerCase();\n  }\n\n  searchSent(filterValue:string){\n    this.dataSourceSent.filter=filterValue.trim().toLowerCase();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/circles/myrequests/myrequests.component.ts"],"sourceRoot":"webpack:///"}